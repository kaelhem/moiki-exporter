var n,e,t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},i=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,r=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,o="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",a="["+o+"]",s="\\d+",c="[a-z\\xdf-\\xf6\\xf8-\\xff]",l="[^\\ud800-\\udfff"+o+s+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",u="(?:\\ud83c[\\udde6-\\uddff]){2}",p="[\\ud800-\\udbff][\\udc00-\\udfff]",f="[A-Z\\xc0-\\xd6\\xd8-\\xde]",d="(?:"+c+"|"+l+")",m="(?:"+f+"|"+l+")",$="(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?",g="[\\ufe0e\\ufe0f]?"+$+"(?:\\u200d(?:"+["[^\\ud800-\\udfff]",u,p].join("|")+")[\\ufe0e\\ufe0f]?"+$+")*",h="(?:"+["[\\u2700-\\u27bf]",u,p].join("|")+")"+g,x=RegExp("['’]","g"),b=RegExp("[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]","g"),y=RegExp([f+"?"+c+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[a,f,"$"].join("|")+")",m+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[a,f+d,"$"].join("|")+")",f+"?"+d+"+(?:['’](?:d|ll|m|re|s|t|ve))?",f+"+(?:['’](?:D|LL|M|RE|S|T|VE))?",s,h].join("|"),"g"),j=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,S="object"==typeof self&&self&&self.Object===Object&&self,I="object"==typeof t&&t&&t.Object===Object&&t||S||Function("return this")(),k=(n={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"ss"},function(e){return null==n?void 0:n[e]}),w=Object.prototype.toString,v=I.Symbol,O=v?v.prototype:void 0,T=O?O.toString:void 0;function _(n){return null==n?"":function(n){if("string"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==w.call(n)}(n))return T?T.call(n):"";var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}(n)}var E=(e=function(n,e,t){return n+(t?"-":"")+e.toLowerCase()},function(n){return function(n,e,t,i){for(var r=-1,o=n?n.length:0;++r<o;)t=e(t,n[r],r,n);return t}(function(n,e,t){return n=_(n),void 0===(e=e)?function(n){return j.test(n)}(n)?function(n){return n.match(y)||[]}(n):function(n){return n.match(i)||[]}(n):n.match(e)||[]}(function(n){return(n=_(n))&&n.replace(r,k).replace(b,"")}(n).replace(x,"")),e,"")});const R=n=>`This story was created with Moiki, and converted with Moiki-Exporter\nMore info: https://github.com/kaelhem/moiki-exporter\nLaunch it with the Moiki player: https://moiki.fr/story/${n}\nExported on ${(new Date).toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",second:"2-digit"})}`,B=n=>{if(n&&n.author){const{firstname:e,lastname:t,pseudo:i}=n.author;return i||e+" "+t}return"Inconnu"};var V={__proto__:null,getHeader:R,getAuthor:B,simplifyStory:({sequences:n,firstSequence:e},t,i)=>{const r={},o=(n,e,t=!1)=>{r[n]||(r[n]={in:[],to:[]}),t?r[n].in.push(e):(r[n].to.push(e),o(e,n,!0))},a={};for(let e of n)if(a[e.id]=e,e.choices&&e.choices.length>0)for(let n of e.choices)n.content=i(n.content),n.condition&&n.condition.next&&n.condition.params&&o(e.id,n.condition.next),n.next&&o(e.id,n.next);else e.condition&&e.condition.next&&e.condition.params&&o(e.id,e.condition.next),e.next&&o(e.id,e.next);const s=[a[e]],c=Object.entries(r).map(([n,e])=>({data:e,index:n}));for(let n of c)(n.data.in.length>1||1===n.data.in.length&&r[n.data.in[0]].to.length>1)&&n.index!==e&&s.push(a[n.index]);for(let n of s){let e=n.id;const o=[a[e]];for(;1===r[e].to.length;)e=r[e].to[0],o.push(a[e]);n.chain=o;const s=[];for(let n of o)s.push(n),n.action&&n.action.params&&"string"==typeof n.action.params&&s.push({objectAction:t[n.action.params]});const c=[];let l="";for(let n of s)n.objectAction?(l&&(c.push(l.replace(/(\s)*<br(\s)*\/>(\s)*/gi,"\r\n").trim()),l=""),c.push(n.objectAction)):l+=i(n.content)+" ";l&&c.push(l.replace(/(\s)*<br(\s)*\/>(\s)*/gi,"\r\n").trim()),n.chainedContent=c}return s.forEach(n=>{n.chain=n.chain.map(({...n})=>({...n}))}),s}};const A=n=>n.replace(/-/gi,"_"),C=n=>n.replace(/(<(strong|b)>\s)/gi," <b>").replace(/(\s<\/(strong|b)>)/gi,"</b> ").replace(/(<em>\s)/gi," <em>").replace(/(\s<\/em>)/gi,"</em> ").replace(/<\/p>/gi,"</p> ").replace(/(<([/p]+)>)/gi,"").replace(/(<([/]*)(span)>)/gi,"").replace(/<span class="ql-cursor">/gi,"").replace(/&nbsp;/gi," ").replace(/(\s)+/gi," ").trim(),L=(n,e)=>`{ ${e[n.condition.params].inkVar}:\n  -> ${A(n.condition.next)}\n- else:\n  -> ${A(n.next)}\n}\n`,q=(n,e,t="")=>{const{inkVar:i,desc:r}=e[n.action.params];return`\n${t}~ ${i} = !${i}\n${t}{ ${i}:\n${t}  <h4><em>Objet récupéré</em> : ${r}</h4>\n${t}- else:\n${t}  <h4><em>Objet perdu</em> : ${r}</h4>\n${t}}\n`},U=n=>{const{_id:e,meta:t,firstSequence:i,sequences:r,assets:o}=n;let a={};for(let n of o)a[n.id]={inkVar:"_"+A(E(n.label)),...n};let s=`/*\n${R(e)}\n*/\n\n# author: ${B(t)}\n# title: ${t.name}\n`;t.image&&(s+=`# IMAGE: ${t.image.replace(/\//gi,"\\/")}\n<em>Crédit photo : <a href="${"https://unsplash.com".replace(/\//gi,"\\/")}">Unsplash</a></em>\n`),s+="<em>"+t.description+"</em>\n<hr/>\n";const c=Object.entries(a).map(([n,e])=>e);for(let n of c)s+="VAR "+n.inkVar+" = false\n";s+="\n-> "+A(i)+"\n";for(let n of r){const e=C(n.content);if(s+="\n=== "+A(n.id)+" ===\n",s+=e+"\n",n.choices&&n.choices.length>0){for(let e of n.choices){let n=" ";e.action&&e.action.params&&"string"==typeof e.action.params&&(n=q(e,a,"\t"));let t="* ["+C(e.content)+"]"+n;s+=e.condition&&e.condition.next&&e.condition.params?`${t} ${L(e,a)}`:t+"-> "+A(e.next)+"\n"}s+="# CLEAR\n"}else n.action&&n.action.params&&"string"==typeof n.action.params&&(s+=q(n,a)),s+=n.condition&&n.condition.next&&n.condition.params?L(n,a):n.next?"-> "+A(n.next)+"\n":"-> END\n"}return s},G=(n,e="story")=>e+"_"+n.replace(/-/gi,"_"),N=n=>n.replace(/(<\/*(strong|b)>)/gi,"").replace(/(<\/*(em)>)/gi,"").replace(/(<\/*(h\d)>)/gi,"").replace(/<span class="ql-cursor">/gi,"").replace(/<\/p>/gi,"</p> ").replace(/<\/*p>/gi,"").replace(/(<\/*(span)>)/gi,"").replace(/(\s)+/gi," ").replace(/\@/gim,"@@64").replace(/\^/gim,"@@94").replace(/\\/gim,"@@92").replace(/\~/gim,"@@126").replace(/\°/gim," ").replace(/\s*<br\s*\/*>(\s|&nbsp;)*/gi,"^").replace(/(\s)*&nbsp;(\s)*/gi," ").replace(/(\"|“|”)/gim,"~").replace(/\’/gim,"'").trim(),z=["w","s","e","n","nw","ne","sw","se"],D=n=>{if(n>=0&&n<10)return z[n]+"_to";throw new Error("Only 8 choices are allowed here...")},M=(n,e)=>n.action&&n.action.params&&"string"==typeof n.action.params?`[; cls(); ${e[n.action.params].identifier}=inverse(${e[n.action.params].identifier}); style bold; addOrRemoveObject(${e[n.action.params].identifier}); print "${N(e[n.action.params].desc)}"; style roman; wait(); return ${G(n.next)};]`:n.condition&&n.condition.next&&n.condition.params?`[; cls(); if (${e[n.condition.params].identifier}) return ${G(n.condition.next)}; else return ${G(n.next)};]`:`[; cls(); return ${G(n.next)};]`,F=(n,e)=>{const t=N(n.content);if(!n.next||n.choices&&0!==n.choices.length){if(n.choices&&n.choices.length>0){let i="";const r=[];let o=0;for(let t of n.choices)i+="- "+(o+1)+". "+N(t.content)+"^",r.push({gotoFunction:D(o),gotoValue:M(t,e)}),++o;return`"${t}^^${i}",\n  ${r.map(n=>`${n.gotoFunction} ${n.gotoValue}`).join(",\n  ")};`}return`[; print "${t}^"; deadflag=${n.isHappyEnd?"2":"1"};];\n`}return n.action&&n.action.params&&"string"==typeof n.action.params?`[; print "${t}^^"; ${e[n.action.params].identifier}=inverse(${e[n.action.params].identifier}); style bold; addOrRemoveObject(${e[n.action.params].identifier}); print "${N(e[n.action.params].desc)}"; style roman; wait(); PlayerTo(${G(n.next)});];\n`:n.condition&&n.condition.next&&n.condition.params?`[; print "${t}"; if (${e[n.condition.params].identifier}) PlayerTo(${G(n.condition.next)}); else PlayerTo(${G(n.next)});];\n`:`[; print "${t}"; PlayerTo(${G(n.next)});];\n`},H=(n,e)=>{if("with-parser"===e)return(n=>{const{_id:e,meta:t,firstSequence:i,sequences:r,assets:o}=n;let a={};for(let n of o)a[n.id]={identifier:"_"+G(E(n.label)),...n};const s=Object.entries(a).map(([n,e])=>e);let c=`!% !-s\n!% $OMIT_UNUSED_ROUTINES=1\n\n! ${R(e).split("\n").join("\n! ")}\n\n! author: ${B(t)}\n! title: ${t.name}\n\nConstant Story "${t.name}";\nConstant Headline "^${t.description}^^Une histoire de ${B(t)}.^^Cette histoire a été exportée avec Moiki Exporter.^La version originelle est accessible ici : https://moiki.fr/story/${e}^";\nRelease 1;\n\n! Game utils\n! -------------------------------------------\n\nConstant NO_SCORE;\n\n! fix: in z-code v3, it seems there is no way to clear the screen...\n#IfV3;\n  [ cls;\n    print "----------------------------------------^";\n    rtrue;\n  ];\n#Ifnot;\n  [ cls;\n    @erase_window -1;\n    rtrue;\n  ];\n#EndIf;\n\n\n[ wait buf;\n  read buf 0;\n];\n\n[ waitAndClear;\n  wait();\n  cls();\n  rtrue;\n];\n\nInclude "parser";\n\n! Add a prefix to every commands to shortcut the lib. credit: @hlabrande\n[ BeforeParsing pos;\n  #Ifdef TARGET_ZCODE;\n    pos = parse->5;\n  #Ifnot; ! TARGET_GLULX\n    pos = parse->3;\n  #Endif; ! TARGET_\n  LTI_Insert(pos, 'c');\n  LTI_Insert(pos+1, 'h');\n  LTI_Insert(pos+2, 'o');\n  LTI_Insert(pos+3, 'i');\n  LTI_Insert(pos+4, 'x');\n  LTI_Insert(pos+5, ' ');\n  Tokenise__(buffer, parse);\n];\n\nInclude "verblib";\n\n[ addOrRemoveObject obj;\n  if (obj) print "Objet récupéré : "; else print "Objet perdu : ";\n  rtrue;\n];\n\n[ inverse obj;\n  if (obj) rfalse; else rtrue;\n];\n`;s.length>0&&(c+=`\n! Variables for Objects / Heroes\n!-------------------------------------------\n${s.map(n=>"Global "+n.identifier+" = false").join(";\n")};\n`),c+='\n! Start story\n! ------------------------------------------\n\nClass sequence\n  with short_name [; rtrue; ],\n    cant_go [; print "Choix non reconnu, veuillez recommencer.^"; <<Look>>; ],\n    has light;\n';for(let n of r)c+=`\nSequence ${G(n.id)} ""\nwith description ${F(n,a)}\n`;return c+=`\n\n! Routines\n!-----------------------------------\n\n[ Initialise;\n  location = ${G(i)};\n  introduction();\n  lookmode=2; ! les lieux déjà visités sont décrits à chaque fois\n  Banner();\n  waitAndClear();\n  return 2; ! banniËre dÈj‡ affichÈe\n];\n\n[ introduction;\n  style underline;\n  print "Ce jeu ne se joue qu'en tapant les chiffres de vos choix.^De ce fait, vous ne pourrez ni sauver ni quitter de manière classique.^^";\n];\n\n[ DeathMessage;\n  switch (deadflag) {\n    1: print "Fin Tragique !";\n    2: print "Fin Heureuse !";\n  }\n];\n\n\n! Grammar\n!-----------------------------------\n\nInclude "FrenchG";\n\n[ ChoixNumberSub ;\n  ${z.map((n,e)=>`if (noun == ${e+1}) <<Go ${n}_obj>>;`).join("\n  ")}\n  print "Choix non reconnu, veuillez recommencer.^";\n];\n\nVerb 'choix'\n* number        ->choixNumber;\n`,c})(n);if("standard"===e)return(n=>{const{_id:e,meta:t,firstSequence:i,sequences:r,assets:o}=n,a=(n,e=1)=>`#IfV5; style ${n}; #EndIf;\n${"  ".repeat(e)}`,s=n=>a("bold",n),c=n=>a("underline",n),l=n=>a("roman",n);let u={};for(let n of o)u[n.id]={identifier:"_"+G(E(n.label)),...n};const p=Object.entries(u).map(([n,e])=>e),f=(n,e)=>n.action&&n.action.params&&"string"==typeof n.action.params?["cls();",`${e[n.action.params].identifier} = inverse(${e[n.action.params].identifier});`,`${s()}addOrRemoveObject(${e[n.action.params].identifier});`,`print "${N(e[n.action.params].desc)}";`,l()+"wait();",`return ${G(n.next)};`]:n.condition&&n.condition.next&&n.condition.params?["cls();",`if (${e[n.condition.params].identifier}) return ${G(n.condition.next)};`,`return ${G(n.next)};`]:["cls();",`return ${G(n.next)};`],d=(n,e)=>{let t=null;const i=[],r=N(n.content);if(!n.next||n.choices&&0!==n.choices.length)if(n.choices&&n.choices.length>0){i.push("choice");let o="";const a=[];let s=0;for(let t of n.choices)o+="- "+(s+1)+". "+N(t.content)+"^",a.push(f(t,e)),++s;t=[`print "${r}^^${o}";`,`choice = getInputChoice(${a.length});`,...a.map((n,e)=>`if (choice == ${e+1}) {\n    ${n.join("\n    ")}\n  }`)]}else t=[`print "${r}^";`,"wait();",`gameOver = ${n.isHappyEnd?"1":"2"};`,"return nothing;"];else t=n.action&&n.action.params&&"string"==typeof n.action.params?[`print "${r}^^";`,`${e[n.action.params].identifier} = inverse(${e[n.action.params].identifier});`,`${s()}addOrRemoveObject(${e[n.action.params].identifier});`,`print "${N(e[n.action.params].desc)}";`,l()+"wait();",`return ${G(n.next)};`]:n.condition&&n.condition.next&&n.condition.params?[`print "${r}";`,"wait();",`if (${e[n.condition.params].identifier}) return ${G(n.condition.next)};`,`return ${G(n.next)};`]:[`print "${r}";`,"wait();",`return ${G(n.next)};`];return{statements:t.join("\n  "),vars:i}};let m=`!% !-s\n!% $OMIT_UNUSED_ROUTINES=1\n\n! ${R(e).split("\n").join("\n! ")}\n\n! author: ${B(t)}\n! title: ${t.name}\n\n! Inform settings\n! -------------------------------------------\n\nObject DefaultRoomStoryForStatusBar "${t.name}"; ! used to force name in status line\nGlobal location = DefaultRoomStoryForStatusBar; ! Must be the first global to show location name\nGlobal status_field_1 = 0; ! Must be the second global to show score or hours\nGlobal status_field_2 = 0; ! Must be the third global to show turns or minutes\n\n! Variables for game management\n! -------------------------------------------\n! Array path --\x3e 10; ! allow 10 undo moves, but it's not implemented yet...\nGlobal markForRedo = 0; ! used to restart game from beginning\nGlobal markForShow = 0; ! used to re-display sequence text\nGlobal gameOver = 0;\n\n! Manage user inputs\n! -------------------------------------------\n\n! fix: in z-code v3, input buffers are not formatted the same way...\n#IfV3;\n  Constant inputBufferStartIndex 1;\n  [ length arr len;\n    len = 0;\n    while (arr->(len+1) ~= 0) ++len;\n    return len;\n  ];\n#Ifnot;\n  Constant inputBufferStartIndex 2;\n  [ length arr;\n    return arr->1;\n  ];\n#EndIf;\n\n! read user inputs\n[ KeyLine buffer;\n  buffer->0 = 10;\n  read buffer 0;\n  return buffer;\n];\n\n! To store user input\nArray key -> 13;\n\n! read user choices / menu commands\n[ getInputChoice numChoices len chNum commandUnknown done;\n  done = false;\n  do {\n    commandUnknown = false;\n    do {\n      print "> ";\n    } until(KeyLine(key)--\x3e0);\n    len = length(key);\n    if (len == 4) {\n      if (key->inputBufferStartIndex == 'h' && key->(inputBufferStartIndex+1) == 'e' && key->(inputBufferStartIndex+2) == 'l' && key->(inputBufferStartIndex+3) == 'p') {\n        showHelp();\n      } else if (key->inputBufferStartIndex == 'u' && key->(inputBufferStartIndex+1) == 'n' && key->(inputBufferStartIndex+2) == 'd' && key->(inputBufferStartIndex+3) == 'o') {\n        undo();\n      } else if (key->inputBufferStartIndex == 'r' && key->(inputBufferStartIndex+1) == 'e' && key->(inputBufferStartIndex+2) == 'd' && key->(inputBufferStartIndex+3) == 'o') {\n        if (redo()) return;\n      } else if (key->inputBufferStartIndex == 'e' && key->(inputBufferStartIndex+1) == 'x' && key->(inputBufferStartIndex+2) == 'i' && key->(inputBufferStartIndex+3) == 't') {\n        exit();\n      } else if (key->inputBufferStartIndex == 'l' && key->(inputBufferStartIndex+1) == 'i' && key->(inputBufferStartIndex+2) == 's' && key->(inputBufferStartIndex+3) == 't') {\n        inventory();\n      } else if (key->inputBufferStartIndex == 's' && key->(inputBufferStartIndex+1) == 'h' && key->(inputBufferStartIndex+2) == 'o' && key->(inputBufferStartIndex+3) == 'w') {\n        markForShow = 1;\n        return;\n      } else {\n        commandUnknown = true;\n      }\n    } else if (len == 1) {\n      chNum = key->inputBufferStartIndex - 48;\n      if (chNum > 0 && chNum <= numChoices) {\n        done = true;\n      } else if (chNum > 0 && chNum <= 10) {\n        print "Cette saisie ne correspond à aucun choix !^";\n      } else {\n        commandUnknown = true;\n      }\n    } else {\n      commandUnknown = true;\n    }\n    if (commandUnknown) {\n      print "Cette commande est inconnue ! Tapez ~HELP~ pour une liste des commandes disponibles.^";\n    }\n  } until(done);\n  return chNum;\n];\n\n[ confirm question len ok done;\n  done = false;\n  ok = false;\n  do {\n    do {\n      if (question) {\n        print (string) question;\n      } else {\n        print "Etes-vous sûr de vouloir faire cette action ? (oui/non)";\n      }\n      print "^> ";\n    } until(KeyLine(key)--\x3e0);\n    len = length(key);\n    if (len == 1) {\n      if (key->inputBufferStartIndex == 'o' or '1') {\n        ok = true;\n        done = true;\n      } else if (key->inputBufferStartIndex == 'n' or '0') {\n        done = true;\n      }\n    } else if (len == 3) {\n      if (key->inputBufferStartIndex == 'o' && key->(inputBufferStartIndex+1) == 'u' && key->(inputBufferStartIndex+2) == 'i') {\n        ok = true;\n        done = true;\n      } else if (key->inputBufferStartIndex == 'n' && key->(inputBufferStartIndex+1) == 'o' && key->(inputBufferStartIndex+2) == 'n') {\n        done = true;\n      }\n    }\n    if (~~done) {\n      print "Veuillez répondre par oui ou non.^";\n    }\n  } until(done);\n  return ok;\n];\n\n\n! Game utils\n! -------------------------------------------\n\n! fix: in z-code v3, it seems there is no way to clear the screen...\n#IfV3;\n  [ cls;\n    print "----------------------------------------^";\n    rtrue;\n  ];\n#Ifnot;\n  [ cls;\n    @erase_window -1;\n    rtrue;\n  ];\n#EndIf;\n\n[ wait;\n  read key 0;\n];\n\n`;p.length>0&&(m+=`\n! Variables for Objects / Heroes\n!-------------------------------------------\n${p.map(n=>"Global "+n.identifier).join(";\n")};\n`),m+=`\n[ clearObjects;\n  ${p&&p.length>0&&p.map(n=>n.identifier+" = false").join(";\n  ")};\n  return;\n];\n\n\n! Game menu entries\n! -------------------------------------------\n\n[ showHelp;\n  ${c()}print "Liste des commandes^";\n  ${l()}! print "  - UNDO : Retourner au choix précédent^";\n  print "  - REDO : Recommencer depuis le début^";\n  print "  - LIST : Lister les objets récupérés^";\n  print "  - SHOW : Afficher le texte de la dernière séquence^";\n  print "  - EXIT : Quitter^";\n  rtrue;\n];\n\n[ exit;\n  print "Bye-bye !^";\n  @quit;\n];\n\n[ undo;\n  print "Undo: not implemented yet !^";\n  rtrue;\n];\n\n[ redo;\n  if (confirm("Recommencer depuis le début ?")) {\n    markForRedo = 1;\n    rtrue;\n  }\n  rfalse;\n];\n\n[ inventory empty;\n  empty = true;\n  ${c()}print "Liste des objets de l'inventaire:^";\n  ${l()}${p.map(n=>"if ("+n.identifier+') {\n    print "* '+n.desc+'^";\n    empty = false;\n  }').join("\n  ")}\n  if (empty) print "Votre inventaire est vide !^";\n  rtrue;\n];\n\n\n! Routines\n!-----------------------------------\n\n[ addOrRemoveObject obj;\n  if (obj) {\n    ++status_field_1;\n    print "Objet récupéré : ";\n  } else {\n    --status_field_1;\n    print "Objet perdu : ";\n  }\n  rtrue;\n];\n\n[ inverse obj;\n  if (obj) rfalse; else rtrue;\n];\n\n[ startScreen;\n  ${c()}print "Cette histoire a été exportée avec Moiki Exporter.^La version originelle est accessible ici : https://moiki.fr/story/${e}^^";\n  ${l()}print "Moiki présente:^";\n  ${s()}print "${t.name}^^";\n  ${l()}print "Une histoire de ${B(t)}^^${t.description}^";\n  rtrue;\n];\n\n[ startGameLoop next res;\n  next = ${G(i)};\n  do {\n    ++status_field_2; ! increase turn counter\n    res = next();\n    if (markForShow == 1) {\n      markForShow = 0;\n      res = next;\n    }\n    if (markForRedo == 1) {\n      res = false;\n    }\n    next = res;\n    print "^";\n  } until(~~next);\n  if (gameOver > 0) {\n    ${s(2)}if (gameOver == 1) {\n      print "Gagné !^^";\n    } else if (gameOver == 2) {\n      print "Perdu !^^";\n    }\n    ${l(2)}gameOver = 0;\n  }\n];\n\n[ Main replay;\n  startScreen();\n  wait();\n  do {\n    cls();\n    replay = false;\n    clearObjects();\n    status_field_1 = 0; ! reset score counter\n    status_field_2 = 0; ! reset turns counter\n    startGameLoop();\n    if (markForRedo == 1) {\n      markForRedo = 0;\n      replay = true;\n    } else if (confirm("Lancer une autre partie ? (oui/non)")) {\n      replay = true;\n    } else {\n      exit();\n    }\n  } until(~~replay);\n];\n\n\n! Story sequences\n! ------------------------------------------\n\n`;for(let n of r){const{statements:e,vars:t}=d(n,u);m+=`[ ${G(n.id)}${t&&t.length>0?" "+t.join(" "):""};\n  ${e}\n];\n\n`}return m})(n);throw new Error("This format is unvailable!")};var P="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),Z=new Uint8Array(16);function W(){if(!P)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return P(Z)}for(var K=[],Y=0;Y<256;++Y)K[Y]=(Y+256).toString(16).substr(1);function J(n,e,t){var i=e&&t||0;"string"==typeof n&&(e="binary"===n?new Array(16):null,n=null);var r=(n=n||{}).random||(n.rng||W)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,e)for(var o=0;o<16;++o)e[i+o]=r[o];return e||function(n,e){var t=0;return[K[n[t++]],K[n[t++]],K[n[t++]],K[n[t++]],"-",K[n[t++]],K[n[t++]],"-",K[n[t++]],K[n[t++]],"-",K[n[t++]],K[n[t++]],"-",K[n[t++]],K[n[t++]],K[n[t++]],K[n[t++]],K[n[t++]],K[n[t++]]].join("")}(r)}const X=n=>n.replace(/-/gi,"_"),Q=n=>n.replace(/(<(strong|b|h\d)>\s)/gi," <b>").replace(/(\s<\/(strong|b|h\d)>)/gi,"</b> ").replace(/(<em>\s)/gi," <em>").replace(/(\s<\/em>)/gi,"</em> ").replace(/<\/p>/gi,"</p> ").replace(/(<([/p]+)>)/gi,"").replace(/(<([/]*)(strong|b|h\d)>)/gi,"''").replace(/(<([/]*)(em)>)/gi,"//").replace(/(<([/]*)(span)>)/gi,"").replace(/<span class="ql-cursor">/gi,"").replace(/(<br(\s)*(\/)*>)/gi," ").replace(/&nbsp;/gi," ").replace(/(\s)+/gi," ").trim(),nn=n=>n.replace(/"/gi,'\\"'),en=(n,e,t="goto")=>`(if: ${e[n.condition.params].tweeVar})[(${t}: "${X(n.condition.next)}")]\n(else:)[(${t}: "${X(n.next)}")]\n`,tn=(n,e)=>{const t=n.condition&&n.condition.next&&n.condition.params?n.condition.params:null,i=n.action&&n.action.params&&"string"==typeof n.action.params?n.action.params:null,r=n.next?X(n.next):null,o=nn(Q(n.content));if(i){const{tweeVar:n,desc:t}=e[i];return`(link: "${o}")[(set: ${n} to not ${n}, $actionText to "${nn(t)}", $actionPassage to "${r}", $isObjectWin to ${n})[(goto: "Toggle-Object")]]\n`}return t?`(link: "${o}")[${en(n,e)}]\n`:r?`(link: "${o}")[(goto: "${r}")]\n`:""},rn=(n,e)=>{const t=n.condition&&n.condition.next&&n.condition.params?n.condition.params:null,i=n.action&&n.action.params&&"string"==typeof n.action.params?n.action.params:null,r=n.next?X(n.next):null;if(i){const{tweeVar:n,desc:t}=e[i];return`(set: ${n} to not ${n}, $actionText to "${nn(t)}", $actionPassage to "${r}", $isObjectWin to ${n})[(display: "Toggle-Object")]\n`}return t?en(n,e,"display")+"\n":r?`(display: "${r}")\n`:""},on=n=>n.replace(/-/gi,"_"),an=n=>n.replace(/(<(strong|b|h\d)>\s)/gi," <b>").replace(/(\s<\/(strong|b|h\d)>)/gi,"</b> ").replace(/(<em>\s)/gi," <em>").replace(/(\s<\/em>)/gi,"</em> ").replace(/<\/p>/gi,"</p> ").replace(/(<([/p]+)>)/gi,"").replace(/(<([/]*)(strong|b|h\d)>)/gi,"''").replace(/(<([/]*)(em)>)/gi,"//").replace(/(<([/]*)(span)>)/gi,"").replace(/<span class="ql-cursor">/gi,"").replace(/(<br(\s)*(\/)*>)/gi," ").replace(/&nbsp;/gi," ").replace(/(\s)+/gi," ").trim(),sn=n=>n.replace(/"/gi,'\\"'),cn=(n,e,t=null)=>{const i=t?`[[${t}|${on(n.condition.next)}]]`:`<<include "${on(n.condition.next)}">>`,r=t?`[[${t}|${on(n.next)}]]`:`<<include "${on(n.next)}">>`;return`<<if ${e[n.condition.params].tweeVar}>>\n  ${i}\n<<else>>\n  ${r}\n<</if>>\n`},ln=(n,e)=>{const t=n.condition&&n.condition.next&&n.condition.params?n.condition.params:null,i=n.action&&n.action.params&&"string"==typeof n.action.params?n.action.params:null,r=n.next?on(n.next):null,o=sn(an(n.content));if(i){const{tweeVar:n,desc:t}=e[i];return`[[${o}|Toggle-Object][${n} to not ${n}; $actionText to "${sn(t)}"; $actionPassage to "${r}"; $isObjectWin to ${n}]]\n`}return t?cn(n,e,o)+"\n":r?`[[${o}|${r}]]\n`:""},un=(n,e)=>{const t=n.condition&&n.condition.next&&n.condition.params?n.condition.params:null,i=n.action&&n.action.params&&"string"==typeof n.action.params?n.action.params:null,r=n.next?on(n.next):null;if(i){const{tweeVar:n,desc:t}=e[i];return`<<set ${n} to not ${n}; $actionText to "${sn(t)}"; $actionPassage to "${r}"; $isObjectWin to ${n}>>\n<<include "Toggle-Object">>\n`}return t?cn(n,e)+"\n":r?`<<include "${r}">>\n`:""},pn=(n,e)=>{if("harlowe"===e)return(n=>{const{_id:e,meta:t,firstSequence:i,sequences:r,assets:o}=n;let a={};for(let n of o)a[n.id]={tweeVar:"$"+X(E(n.label)),...n};let s=`\x3c!--\n${R(e)}\n--\x3e\n\n:: StoryAuthor\n${B(t)}\n\n:: StoryTitle\n${t.name}\n\n:: StorySubtitle\n${t.description}\n\n:: StoryData\n{\n  "ifid": "${J()}",\n  "format": "Harlowe",\n  "format-version": "3.1.0",\n  "start": "${X(i)}",\n  "zoom": 1\n}\n\n`;const c=Object.entries(a).map(([n,e])=>e);let l="(set: $actionText to false, $actionPassage to false, $isObjectWin to false)\n";for(let n of c)l+="(set: "+n.tweeVar+" to false)\n";for(let n of r){const e=Q(n.content);if(s+="\n:: "+X(n.id)+"\n"+e+"\n",n.choices&&n.choices.length>0)for(let e of n.choices)s+=tn(e,a);else s+=rn(n,a);n.id===i&&(s+=l)}return s+="\n:: Toggle-Object\n(if: $isObjectWin)[Objet récupéré : {$actionText}]\n(else:)[Objet perdu : {$actionText}]\n(display: $actionPassage)\n",s})(n);if("sugarcube"===e)return(n=>{const{_id:e,meta:t,firstSequence:i,sequences:r,assets:o}=n;let a={};for(let n of o)a[n.id]={tweeVar:"$"+on(E(n.label)),...n};let s=`\x3c!--\n${R(e)}\n--\x3e\n\n:: StoryAuthor\n${B(t)}\n\n:: StoryTitle\n${t.name}\n\n:: StorySubtitle\n${t.description}\n\n:: StoryData\n{\n  "ifid": "${J()}",\n  "format": "SugarCube",\n  "format-version": "2.31.1",\n  "start": "${on(i)}",\n  "zoom": 1\n}\n\n`;const c=Object.entries(a).map(([n,e])=>e);let l="<<set $actionText to false; $actionPassage to false; $isObjectWin to false>>\n";for(let n of c)l+="<<set "+n.tweeVar+" to false>>\n";for(let n of r){const e=an(n.content);if(s+="\n:: "+on(n.id)+"\n"+e+"\n",n.choices&&n.choices.length>0)for(let e of n.choices)s+=ln(e,a);else s+=un(n,a);n.id===i&&(s+=l)}return s+="\n:: Toggle-Object\n<<if $isObjectWin>>\n  récupéré : $actionText\n<<else>>\n  perdu : $actionText\n<</if>>\n<<include [[$actionPassage]]>>\n",s})(n);throw new Error("This format is unvailable!")},fn=n=>n.replace(/<\/p>/gi,"</p> ").replace(/(<([/p]+)>)/gi,"").replace(/(<(strong|b|h\d)>\s)/gi," <b>").replace(/(\s<\/(strong|b|h\d)>)/gi,"</b> ").replace(/(<([/]*)(strong|b|h\d)>)/gi,"**").replace(/(<em>\s)/gi," <em>").replace(/(\s<\/em>)/gi,"</em> ").replace(/(<([/]*)(em)>)/gi,"_").replace(/(<([/]*)(span)>)/gi,"").replace(/<span class="ql-cursor">/gi,"").replace(/(<br(\s)*(\/)*>)/gi,"+n+").replace(/(&nbsp;)+/gi," ").replace(/(\s)+/gi," ").trim(),dn=n=>{const{meta:e,firstSequence:t,sequences:i,assets:r}=n,o=n=>i.findIndex(e=>e.id===n)+2;let a={};for(let n of r)a[n.id]={storyVar:(s=E(n.label),s.replace(/-/gi,"_")),...n};var s;const c=[],l=[];let u=i.length+2;const p=(n,e)=>{const t=u;return l.push({id:t,events:[`997|${n.storyVar}|${t+2}|null\n`,`997|null|${t+1}|null\n`]}),l.push({id:t+1,action:`${n.storyVar}|invisible|null|récupéré: ${n.desc.trim()}|null`,events:[`997|null|${e}|null\n`]}),l.push({id:t+2,action:`-${n.storyVar}|invisible|null|perdu: ${n.desc.trim()}|null`,events:[`997|null|${e}|null\n`]}),u+=3,t};let f="1 _start_\n";e.image&&(f+=`[[${e.image}]]+n+&&\nCrédit photo : Unsplash+n+&&\n`),f+=`Une histoire de ${B(e).trim()}+n+&&\n`,f+="(exporté via https://moiki.fr)+n++n+&&\n",f+=e.description+"\n|\n",f+=`997|null|${o(t)}|null\n`,f+="*****",c.push({id:"$start",room:f});for(let n of i){let e="";const t=fn(n.content);if(e+=o(n.id)+" "+n.id+"\n",e+="[["+t.split("\n").map(n=>n+"+n+").join("")+"]]",n.choices&&n.choices.length>0){const t=[];let i=1;for(let r of n.choices){const n=o(r.next);if(r.condition&&r.condition.next&&r.condition.params)l.push({id:u,events:[`997|${a[r.condition.params].storyVar}|${o(r.condition.next)}|null\n`,`997|null|${n}|null\n`]}),e+=`+n+&&\n${fn(r.content)} (${i})`,t.push(u),++u;else if(r.action&&r.action.params&&"string"==typeof r.action.params){const o=p(a[r.action.params],n);e+=`+n+&&\n${fn(r.content)} (${i})`,t.push(o)}else e+=`+n+&&\n${fn(r.content)} (${i})`,t.push(n);++i}if(t.length>0){e+="\n|\n",i=1;for(let n of t)e+=i+"->"+n+"\n",++i}}else if(n.final||!n.next)e+="\n|\n",e+=n.final&&n.isHappyEnd?"999|Tu as gagné ! Bravo !\n":"998|Tu as perdu ! Recommence, je suis sûr que tu peux y arriver !\n";else{const t=o(n.next);e+="\n|\n",n.action&&n.action.params&&"string"==typeof n.action.params?e+=`997|null|${p(a[n.action.params],t)}|null\n`:(n.condition&&(e+=`997|${a[n.condition.params].storyVar}|${o(n.condition.next)}|null\n`),e+=`997|null|${t}|null\n`)}e+="*****",c.push({id:n.id,room:e})}for(let{id:n,events:e,action:t}of l){let i=n+" condition-room-"+n+"\n";i+="null\n",i+=t||"|",i+="\n"+e.join(""),i+="*****",c.push({id:n,room:i})}return e.name+"\n"+c.length+"\n"+c.map(({room:n})=>n).join("\n")+"\n1§1️⃣|2§2️⃣|3§3️⃣"};var mn="0.1.12";export{H as convertToInform,U as convertToInk,dn as convertToJdrBot,pn as convertToTwee,V as utils,mn as version};
//# sourceMappingURL=moiki-exporter.modern.js.map
