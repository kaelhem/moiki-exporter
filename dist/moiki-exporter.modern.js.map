{"version":3,"file":"moiki-exporter.modern.js","sources":["../node_modules/lodash.kebabcase/index.js","../src/utils.js","../src/ink/index.js","../src/inform/i6-utils.js","../src/inform/i6-with-parser.js","../src/inform/index.js","../src/inform/i6-raw.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/bytesToUuid.js","../node_modules/uuid/dist/esm-browser/v4.js","../src/twee/twee-harlowe.js","../src/twee/twee-sugarcube.js","../src/twee/index.js","../src/jdr-bot/index.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = kebabCase;\n","const getDate = () => {\n  const dateOptions = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  }\n  return new Date().toLocaleDateString('en-US', dateOptions)\n}\n\nexport const getHeader = (storyId) => (\n`This story was created with Moiki, and converted with Moiki-Exporter\nMore info: https://github.com/kaelhem/moiki-exporter\nLaunch it with the Moiki player: https://moiki.fr/story/${storyId}\nExported on ${getDate()}`\n)\n\nexport const getAuthor = (story) => {\n  if (story && story.author) {\n    const { firstname, lastname, pseudo } = story.author\n    return pseudo ? pseudo : firstname + ' ' + lastname\n  }\n  return 'Inconnu'\n}\n\n/*\n  This WTF function allow to chain simple sequences as it was one.\n  It returns an array of sequences with this added attributes :\n    * chain: array of chained sequences (this one included)\n    * chainedContent: an array with either : \n      + cumulated text of the chained sequences (as strings)\n      + object that corresponding to won objects\n      ex.: ['text of several sequences', {pngIcon, desc}, 'text of following sequences']\n\n  /!\\ this method is destructive for the sequences object pass in. You should use a deep copy to keep you data untouched.\n*/\nexport const simplifyStory = ({sequences, firstSequence, assets}, vars, cleanTextFn) => {\n  const tree = {}\n\n  const addLink = (id, to, isBackLink=false) => {\n    if (!tree[id]) {\n      tree[id] = {in: [], to: []}\n    }\n    if (!isBackLink) {\n      tree[id].to.push(to)\n      addLink(to, id, true)\n    } else {\n      tree[id].in.push(to)\n    }\n  }\n\n  const allSequencesById = {}\n\n  for (let s of sequences) {\n    allSequencesById[s.id] = s\n    if (s.choices && s.choices.length > 0) {\n      for (let choice of s.choices) {\n        choice.content = cleanTextFn(choice.content)\n        if (choice.condition && choice.condition.next && choice.condition.params) {\n          addLink(s.id, choice.condition.next)\n        }\n        if (choice.next) {\n          addLink(s.id, choice.next)\n        }\n      }\n    } else {\n      if (s.condition && s.condition.next && s.condition.params) {\n        addLink(s.id, s.condition.next)\n      }\n      if (s.next) {\n        addLink(s.id, s.next)\n      }\n    }\n  }\n  \n  const chapters = [allSequencesById[firstSequence]]\n  const treeArray = Object.entries(tree).map(([index, data]) => ({data, index}))\n  for (let node of treeArray) {\n    if ((node.data.in.length > 1 || (node.data.in.length === 1 && tree[node.data.in[0]].to.length > 1)) && node.index !== firstSequence) {\n      chapters.push(allSequencesById[node.index])\n    }\n  }\n  for (let chap of chapters) {\n    let currentId = chap.id\n    const chain = [allSequencesById[currentId]]\n    while (tree[currentId].to.length === 1) {\n      currentId = tree[currentId].to[0]\n      chain.push(allSequencesById[currentId])\n    }\n    chap.chain = chain\n\n    const chainWithObjects = []\n    for (let node of chain) {\n      chainWithObjects.push(node)\n      if (node.action && node.action.params && typeof node.action.params === 'string') {\n        chainWithObjects.push({objectAction: vars[node.action.params]})\n      }\n    }\n    const chainSum = []\n    let contentSum = ''\n    for (let chainObj of chainWithObjects) {\n      if (chainObj.objectAction) {\n        if (contentSum) {\n          chainSum.push(contentSum.replace(/(\\s)*<br(\\s)*\\/>(\\s)*/gi, '\\u000D\\u000A').trim())\n          contentSum = ''\n        }\n        chainSum.push(chainObj.objectAction)\n      } else {\n        contentSum += cleanTextFn(chainObj.content) + ' '\n      }\n    }\n    if (contentSum) {\n      chainSum.push(contentSum.replace(/(\\s)*<br(\\s)*\\/>(\\s)*/gi, '\\u000D\\u000A').trim())\n    }\n    chap.chainedContent = chainSum\n  }\n  chapters.forEach(seq => {\n    seq.chain = seq.chain.map(({chain, chainedContent, ...rest}) => ({...rest}))\n  })\n  return chapters\n}","import kebabCase from 'lodash.kebabcase'\nimport { getHeader, getAuthor } from '../utils'\n\nconst convertId = id => id.replace(/-/gi, '_')\nconst cleanContent = content => {\n  return content\n    .replace(/(<(strong|b)>\\s)/gi, ' <b>')\n    .replace(/(\\s<\\/(strong|b)>)/gi, '</b> ')\n    .replace(/(<em>\\s)/gi, ' <em>')\n    .replace(/(\\s<\\/em>)/gi, '</em> ')\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/(<([/p]+)>)/gi, '')\n    .replace(/(<([/]*)(span)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/&nbsp;/gi, ' ')\n    .replace(/(\\s)+/gi, ' ')\n    .trim()\n}\n\nconst addCondition = (data, variables) => (\n`{ ${variables[data.condition.params].inkVar}:\n  -> ${convertId(data.condition.next)}\n- else:\n  -> ${convertId(data.next)}\n}\n`)\n\nconst addAction = (data, variables, prefix='') => {\n  const {inkVar, desc} = variables[data.action.params]\n  return (`\n${prefix}~ ${inkVar} = !${inkVar}\n${prefix}{ ${inkVar}:\n${prefix}  <h4><em>Objet récupéré</em> : ${desc}</h4>\n${prefix}- else:\n${prefix}  <h4><em>Objet perdu</em> : ${desc}</h4>\n${prefix}}\n`)}\n\nexport const convertToInk = (story) => {\n  const { _id, meta, firstSequence, sequences, assets } = story\n\n  let variables = {}\n  for (let asset of assets) {\n    variables[asset.id] = {\n      inkVar: '_' + convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n  \n  let result = `/*\n${getHeader(_id)}\n*/\n\n# author: ${getAuthor(meta)}\n# title: ${meta.name}\n`\n  if (meta.image) {\n    result += `# IMAGE: ${meta.image.replace(/\\//gi, '\\\\/')}\n<em>Crédit photo : <a href=\"${'https://unsplash.com'.replace(/\\//gi, '\\\\/')}\">Unsplash</a></em>\n`\n  }\n  result += '<em>' + meta.description + '</em>\\n<hr/>\\n'\n\n  const varsAsArray = Object.entries(variables).map(([_, data]) => data)\n  for (let variable of varsAsArray) {\n    result += 'VAR ' + variable.inkVar + ' = false\\n'\n  }\n  result += '\\n-> ' + convertId(firstSequence) + '\\n'\n\n  for (let sequence of sequences) {\n    const text = cleanContent(sequence.content)\n    result += '\\n=== ' + convertId(sequence.id) + ' ===\\n'\n    result += text + '\\n'\n    if (sequence.choices && sequence.choices.length > 0) {\n      for (let choice of sequence.choices) {\n        let action = ' '\n        if (choice.action && choice.action.params && typeof choice.action.params === 'string') {\n          action = addAction(choice, variables, '\\t')\n        }\n        let choiceContent = '* [' + cleanContent(choice.content) + ']' + action\n        if (choice.condition && choice.condition.next && choice.condition.params) {\n          result += `${choiceContent} ${addCondition(choice, variables)}`\n        } else {\n          result += choiceContent + '-> ' + convertId(choice.next) + '\\n'\n        }\n      }\n      result += '# CLEAR\\n'\n    } else {\n      if (sequence.action && sequence.action.params && typeof sequence.action.params === 'string') {\n        result += addAction(sequence, variables)\n      }\n      if (sequence.condition && sequence.condition.next && sequence.condition.params) {\n        result += addCondition(sequence, variables)\n      } else if (sequence.next) {\n        result += '-> ' + convertId(sequence.next) + '\\n'\n      } else {\n        result += '-> END\\n'\n      }\n    }\n  }\n  return result\n}","export const convertId = (id, prefix= 'story') => prefix + '_' + id.replace(/-/gi, '_')\n\nexport const cleanContent = (content) => {\n  return content\n    .replace(/(<\\/*(strong|b)>)/gi, '')\n    .replace(/(<\\/*(em)>)/gi, '')\n    .replace(/(<\\/*(h\\d)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/<\\/*p>/gi, '')\n    .replace(/(<\\/*(span)>)/gi, '')\n    .replace(/(\\s)+/gi, ' ')\n    .replace(/\\@/gim, '@@64')\n    .replace(/\\^/gim, '@@94')\n    .replace(/\\\\/gim, '@@92')\n    .replace(/\\~/gim, '@@126')\n    .replace(/\\°/gim, ' ') // FIXME! the @@225 code seems to not work (event with the \"Zcharacter table + '@{00B0}';\" directive)\n    .replace(/\\s*<br\\s*\\/*>(\\s|&nbsp;)*/gi, '^')\n    .replace(/(\\s)*&nbsp;(\\s)*/gi, ' ') // maybe: [unicode 160] ?\n    .replace(/(\\\"|“|”)/gim, '~')\n    .replace(/\\’/gim, '\\'')\n    .trim()\n}","/**\nAll this stuff was made possible with the help of @batteman and the fiction-interactive.fr community.\n*/\n\nimport kebabCase from 'lodash.kebabcase'\nimport { getHeader, getAuthor } from '../utils'\nimport { convertId, cleanContent } from './i6-utils'\n\nconst directions = ['w', 's', 'e', 'n', 'nw', 'ne', 'sw', 'se']\n\nconst getChoiceGotoFunctionFromIndex = (index) => {\n  if (index >= 0 && index < 10) {\n    return directions[index] + '_to'\n  }\n  throw new Error('Only 8 choices are allowed here...')\n}\n\nconst getChoiceLinkValue = (choice, variables) => {\n  if (choice.action && choice.action.params && typeof choice.action.params === 'string') {\n    return `[; cls(); ${variables[choice.action.params].identifier}=inverse(${variables[choice.action.params].identifier}); style bold; addOrRemoveObject(${variables[choice.action.params].identifier}); print \"${cleanContent(variables[choice.action.params].desc)}\"; style roman; wait(); return ${convertId(choice.next)};]`\n  } else if (choice.condition && choice.condition.next && choice.condition.params) {\n    return `[; cls(); if (${variables[choice.condition.params].identifier}) return ${convertId(choice.condition.next)}; else return ${convertId(choice.next)};]`\n  } else {\n    return `[; cls(); return ${convertId(choice.next)};]`\n  }\n}\n\nconst getNodeDescription = (sequence, variables) => {\n  const text = cleanContent(sequence.content)\n  if (sequence.next && (!sequence.choices || sequence.choices.length === 0)) {\n    // simple sequence\n    if (sequence.action && sequence.action.params && typeof sequence.action.params === 'string') {\n      return `[; print \"${text}^^\"; ${variables[sequence.action.params].identifier}=inverse(${variables[sequence.action.params].identifier}); style bold; addOrRemoveObject(${variables[sequence.action.params].identifier}); print \"${cleanContent(variables[sequence.action.params].desc)}\"; style roman; wait(); PlayerTo(${convertId(sequence.next)});];\\n`\n    } else if (sequence.condition && sequence.condition.next && sequence.condition.params) {\n      return `[; print \"${text}\"; if (${variables[sequence.condition.params].identifier}) PlayerTo(${convertId(sequence.condition.next)}); else PlayerTo(${convertId(sequence.next)});];\\n`\n    }\n    return `[; print \"${text}\"; PlayerTo(${convertId(sequence.next)});];\\n`\n  } else if (sequence.choices && sequence.choices.length > 0) {\n    // choice sequence\n    let choicesDescription = ''\n    const choicesLinks = []\n    let choiceIndex = 0\n    for (let choice of sequence.choices) {\n      const choiceContent = cleanContent(choice.content)\n      choicesDescription += '- ' + (choiceIndex + 1) + '. ' + choiceContent + '^'\n      choicesLinks.push({\n        gotoFunction: getChoiceGotoFunctionFromIndex(choiceIndex),\n        gotoValue: getChoiceLinkValue(choice, variables)\n      })\n      ++choiceIndex\n    }\n    return `\"${text}^^${choicesDescription}\",\\n  ${choicesLinks.map(l => `${l.gotoFunction} ${l.gotoValue}`).join(',\\n  ')};`\n  } else {\n    // final sequence\n    return `[; print \"${text}^\"; deadflag=${ sequence.isHappyEnd ? '2' : '1' };];\\n`\n  }\n}\n\nexport const convertToI6WithParser = (story) => {\n  const { _id, meta, firstSequence, sequences, assets } = story\n\n  let variables = {}\n  for (let asset of assets) {\n    variables[asset.id] = {\n      identifier: '_' + convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n\n  const varsAsArray = Object.entries(variables).map(([_, data]) => data)\n\n  let result = `!% !-s\n!% $OMIT_UNUSED_ROUTINES=1\n\n! ${getHeader(_id).split('\\n').join('\\n! ')}\n\n! author: ${getAuthor(meta)}\n! title: ${meta.name}\n\nConstant Story \"${meta.name}\";\nConstant Headline \"^${meta.description}^^Une histoire de ${getAuthor(meta)}.^^Cette histoire a été exportée avec Moiki Exporter.^La version originelle est accessible ici : https://moiki.fr/story/${_id}^\";\nRelease 1;\n\n! Game utils\n! -------------------------------------------\n\nConstant NO_SCORE;\n\n! fix: in z-code v3, it seems there is no way to clear the screen...\n#IfV3;\n  [ cls;\n    print \"----------------------------------------^\";\n    rtrue;\n  ];\n#Ifnot;\n  [ cls;\n    @erase_window -1;\n    rtrue;\n  ];\n#EndIf;\n\n\n[ wait buf;\n  read buf 0;\n];\n\n[ waitAndClear;\n  wait();\n  cls();\n  rtrue;\n];\n\nInclude \"parser\";\n\n! Add a prefix to every commands to shortcut the lib. credit: @hlabrande\n[ BeforeParsing pos;\n  #Ifdef TARGET_ZCODE;\n    pos = parse->5;\n  #Ifnot; ! TARGET_GLULX\n    pos = parse->3;\n  #Endif; ! TARGET_\n  LTI_Insert(pos, 'c');\n  LTI_Insert(pos+1, 'h');\n  LTI_Insert(pos+2, 'o');\n  LTI_Insert(pos+3, 'i');\n  LTI_Insert(pos+4, 'x');\n  LTI_Insert(pos+5, ' ');\n  Tokenise__(buffer, parse);\n];\n\nInclude \"verblib\";\n\n[ addOrRemoveObject obj;\n  if (obj) print \"Objet récupéré : \"; else print \"Objet perdu : \";\n  rtrue;\n];\n\n[ inverse obj;\n  if (obj) rfalse; else rtrue;\n];\n`\n\nif (varsAsArray.length > 0) {\nresult += `\n! Variables for Objects / Heroes\n!-------------------------------------------\n${varsAsArray.map(v => 'Global ' + (v.identifier + ' = false')).join(';\\n')};\n`\n}\n\nresult += `\n! Start story\n! ------------------------------------------\n\nClass sequence\n  with short_name [; rtrue; ],\n    cant_go [; print \"Choix non reconnu, veuillez recommencer.^\"; <<Look>>; ],\n    has light;\n`\n\n  for (let sequence of sequences) {   \n    result += `\nSequence ${convertId(sequence.id)} \"\"\nwith description ${getNodeDescription(sequence, variables)}\n`\n}\n\nresult += `\n\n! Routines\n!-----------------------------------\n\n[ Initialise;\n  location = ${convertId(firstSequence)};\n  introduction();\n  lookmode=2; ! les lieux déjà visités sont décrits à chaque fois\n  Banner();\n  waitAndClear();\n  return 2; ! banniËre dÈj‡ affichÈe\n];\n\n[ introduction;\n  style underline;\n  print \"Ce jeu ne se joue qu'en tapant les chiffres de vos choix.^De ce fait, vous ne pourrez ni sauver ni quitter de manière classique.^^\";\n];\n\n[ DeathMessage;\n  switch (deadflag) {\n    1: print \"Fin Tragique !\";\n    2: print \"Fin Heureuse !\";\n  }\n];\n\n\n! Grammar\n!-----------------------------------\n\nInclude \"FrenchG\";\n\n[ ChoixNumberSub ;\n  ${directions.map((d, idx) => (`if (noun == ${idx + 1}) <<Go ${d}_obj>>;`)).join('\\n  ')}\n  print \"Choix non reconnu, veuillez recommencer.^\";\n];\n\nVerb 'choix'\n* number        ->choixNumber;\n`\n  return result\n}","import { convertToI6Raw } from './i6-raw'\nimport { convertToI6WithParser } from './i6-with-parser'\n\nexport const convertToInform = (story, format) => {\n  if (format === 'with-parser') {\n    return convertToI6WithParser(story)\n  }\n  if (format === 'standard') {\n    return convertToI6Raw(story)\n  }\n  throw new Error('This format is unvailable!')\n}","/**\nThi export will not use any extra library, just Inform.\n*/\n\nimport kebabCase from 'lodash.kebabcase'\nimport { getHeader, getAuthor } from '../utils'\nimport { convertId, cleanContent } from './i6-utils'\n\nexport const convertToI6Raw = (story) => {\n  const { _id, meta, firstSequence, sequences, assets } = story\n\n  const writeStyle = (style, tabs=1) => `#IfV5; style ${style}; #EndIf;\\n${'  '.repeat(tabs)}`\n  const bold = (tabs) => writeStyle('bold', tabs)\n  const reverse = (tabs) => writeStyle('reverse', tabs)\n  const underline = (tabs) => writeStyle('underline', tabs)\n  const roman = (tabs) => writeStyle('roman', tabs)\n\n  let variables = {}\n  for (let asset of assets) {\n    variables[asset.id] = {\n      identifier: '_' + convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n\n  const varsAsArray = Object.entries(variables).map(([_, data]) => data)\n\n  const getChoiceLinkValue = (choice, variables) => {\n    if (choice.action && choice.action.params && typeof choice.action.params === 'string') {\n      return [\n        `cls();`,\n        `${variables[choice.action.params].identifier} = inverse(${variables[choice.action.params].identifier});`,\n        `${ bold() }addOrRemoveObject(${variables[choice.action.params].identifier});`,\n        `print \"${cleanContent(variables[choice.action.params].desc)}\";`,\n        `${ roman() }wait();`,\n        `return ${convertId(choice.next)};`\n      ]\n    } else if (choice.condition && choice.condition.next && choice.condition.params) {\n      return [\n        `cls();`,\n        `if (${variables[choice.condition.params].identifier}) return ${convertId(choice.condition.next)};`,\n        `return ${convertId(choice.next)};`\n      ]\n    } else {\n      return [ \n        `cls();`,\n        `return ${convertId(choice.next)};`\n      ]\n    }\n  }\n\n  const getNodeDescription = (sequence, variables) => {\n    let statements = null\n    const listVars = []\n    const text = cleanContent(sequence.content)\n    if (sequence.next && (!sequence.choices || sequence.choices.length === 0)) {\n      // simple sequence\n      if (sequence.action && sequence.action.params && typeof sequence.action.params === 'string') {\n        statements = [\n          `print \"${text}^^\";`,\n          `${variables[sequence.action.params].identifier} = inverse(${variables[sequence.action.params].identifier});`,\n          `${ bold() }addOrRemoveObject(${variables[sequence.action.params].identifier});`,\n          `print \"${cleanContent(variables[sequence.action.params].desc)}\";`,\n          `${ roman() }wait();`,\n          `return ${convertId(sequence.next)};`\n        ]\n      } else if (sequence.condition && sequence.condition.next && sequence.condition.params) {\n        statements = [\n          `print \"${text}\";`,\n          `wait();`,\n          `if (${variables[sequence.condition.params].identifier}) return ${convertId(sequence.condition.next)};`,\n          `return ${convertId(sequence.next)};`\n        ]\n      } else {\n        statements = [\n          `print \"${text}\";`,\n          `wait();`,\n          `return ${convertId(sequence.next)};`\n        ]\n      }\n    } else if (sequence.choices && sequence.choices.length > 0) {\n      // choice sequence\n      listVars.push('choice')\n      let choicesDescription = ''\n      const choicesLinks = []\n      let choiceIndex = 0\n      for (let choice of sequence.choices) {\n        const choiceContent = cleanContent(choice.content)\n        choicesDescription += '- ' + (choiceIndex + 1) + '. ' + choiceContent + '^'\n        choicesLinks.push(getChoiceLinkValue(choice, variables))\n        ++choiceIndex\n      }\n      statements = [\n        `print \"${text}^^${choicesDescription}\";`,\n        `choice = getInputChoice(${choicesLinks.length});`,\n        ...choicesLinks.map((link, i) => `if (choice == ${ i + 1 }) {\\n    ${link.join('\\n    ')}\\n  }`)\n      ]\n    } else {\n      // final sequence\n      statements = [\n        `print \"${text}^\";`,\n        `wait();`,\n        `gameOver = ${ sequence.isHappyEnd ? '1' : '2'};`,\n        `return nothing;`\n      ]\n    }\n    return {\n      statements: statements.join('\\n  '),\n      vars: listVars\n    }\n  }\n\n  let result = `!% !-s\n!% $OMIT_UNUSED_ROUTINES=1\n\n! ${getHeader(_id).split('\\n').join('\\n! ')}\n\n! author: ${getAuthor(meta)}\n! title: ${meta.name}\n\n! Inform settings\n! -------------------------------------------\n\nObject DefaultRoomStoryForStatusBar \"${meta.name}\"; ! used to force name in status line\nGlobal location = DefaultRoomStoryForStatusBar; ! Must be the first global to show location name\nGlobal status_field_1 = 0; ! Must be the second global to show score or hours\nGlobal status_field_2 = 0; ! Must be the third global to show turns or minutes\n\n! Variables for game management\n! -------------------------------------------\n! Array path --> 10; ! allow 10 undo moves, but it's not implemented yet...\nGlobal markForRedo = 0; ! used to restart game from beginning\nGlobal markForShow = 0; ! used to re-display sequence text\nGlobal gameOver = 0;\n\n! Manage user inputs\n! -------------------------------------------\n\n! fix: in z-code v3, input buffers are not formatted the same way...\n#IfV3;\n  Constant inputBufferStartIndex 1;\n  [ length arr len;\n    len = 0;\n    while (arr->(len+1) ~= 0) ++len;\n    return len;\n  ];\n#Ifnot;\n  Constant inputBufferStartIndex 2;\n  [ length arr;\n    return arr->1;\n  ];\n#EndIf;\n\n! read user inputs\n[ KeyLine buffer;\n  buffer->0 = 10;\n  read buffer 0;\n  return buffer;\n];\n\n! To store user input\nArray key -> 13;\n\n! read user choices / menu commands\n[ getInputChoice numChoices len chNum commandUnknown done;\n  done = false;\n  do {\n    commandUnknown = false;\n    do {\n      print \"> \";\n    } until(KeyLine(key)-->0);\n    len = length(key);\n    if (len == 4) {\n      if (key->inputBufferStartIndex == 'h' && key->(inputBufferStartIndex+1) == 'e' && key->(inputBufferStartIndex+2) == 'l' && key->(inputBufferStartIndex+3) == 'p') {\n        showHelp();\n      } else if (key->inputBufferStartIndex == 'u' && key->(inputBufferStartIndex+1) == 'n' && key->(inputBufferStartIndex+2) == 'd' && key->(inputBufferStartIndex+3) == 'o') {\n        undo();\n      } else if (key->inputBufferStartIndex == 'r' && key->(inputBufferStartIndex+1) == 'e' && key->(inputBufferStartIndex+2) == 'd' && key->(inputBufferStartIndex+3) == 'o') {\n        if (redo()) return;\n      } else if (key->inputBufferStartIndex == 'e' && key->(inputBufferStartIndex+1) == 'x' && key->(inputBufferStartIndex+2) == 'i' && key->(inputBufferStartIndex+3) == 't') {\n        exit();\n      } else if (key->inputBufferStartIndex == 'l' && key->(inputBufferStartIndex+1) == 'i' && key->(inputBufferStartIndex+2) == 's' && key->(inputBufferStartIndex+3) == 't') {\n        inventory();\n      } else if (key->inputBufferStartIndex == 's' && key->(inputBufferStartIndex+1) == 'h' && key->(inputBufferStartIndex+2) == 'o' && key->(inputBufferStartIndex+3) == 'w') {\n        markForShow = 1;\n        return;\n      } else {\n        commandUnknown = true;\n      }\n    } else if (len == 1) {\n      chNum = key->inputBufferStartIndex - 48;\n      if (chNum > 0 && chNum <= numChoices) {\n        done = true;\n      } else if (chNum > 0 && chNum <= 10) {\n        print \"Cette saisie ne correspond à aucun choix !^\";\n      } else {\n        commandUnknown = true;\n      }\n    } else {\n      commandUnknown = true;\n    }\n    if (commandUnknown) {\n      print \"Cette commande est inconnue ! Tapez ~HELP~ pour une liste des commandes disponibles.^\";\n    }\n  } until(done);\n  return chNum;\n];\n\n[ confirm question len ok done;\n  done = false;\n  ok = false;\n  do {\n    do {\n      if (question) {\n        print (string) question;\n      } else {\n        print \"Etes-vous sûr de vouloir faire cette action ? (oui/non)\";\n      }\n      print \"^> \";\n    } until(KeyLine(key)-->0);\n    len = length(key);\n    if (len == 1) {\n      if (key->inputBufferStartIndex == 'o' or '1') {\n        ok = true;\n        done = true;\n      } else if (key->inputBufferStartIndex == 'n' or '0') {\n        done = true;\n      }\n    } else if (len == 3) {\n      if (key->inputBufferStartIndex == 'o' && key->(inputBufferStartIndex+1) == 'u' && key->(inputBufferStartIndex+2) == 'i') {\n        ok = true;\n        done = true;\n      } else if (key->inputBufferStartIndex == 'n' && key->(inputBufferStartIndex+1) == 'o' && key->(inputBufferStartIndex+2) == 'n') {\n        done = true;\n      }\n    }\n    if (~~done) {\n      print \"Veuillez répondre par oui ou non.^\";\n    }\n  } until(done);\n  return ok;\n];\n\n\n! Game utils\n! -------------------------------------------\n\n! fix: in z-code v3, it seems there is no way to clear the screen...\n#IfV3;\n  [ cls;\n    print \"----------------------------------------^\";\n    rtrue;\n  ];\n#Ifnot;\n  [ cls;\n    @erase_window -1;\n    rtrue;\n  ];\n#EndIf;\n\n[ wait;\n  read key 0;\n];\n\n`\n\nif (varsAsArray.length > 0) {\nresult += `\n! Variables for Objects / Heroes\n!-------------------------------------------\n${varsAsArray.map(v => 'Global ' + v.identifier).join(';\\n')};\n`}\n\nresult += `\n[ clearObjects;\n  ${(varsAsArray && varsAsArray.length > 0) && varsAsArray.map(v => v.identifier + ' = false').join(';\\n  ')};\n  return;\n];\n\n\n! Game menu entries\n! -------------------------------------------\n\n[ showHelp;\n  ${ underline() }print \"Liste des commandes^\";\n  ${ roman() }! print \"  - UNDO : Retourner au choix précédent^\";\n  print \"  - REDO : Recommencer depuis le début^\";\n  print \"  - LIST : Lister les objets récupérés^\";\n  print \"  - SHOW : Afficher le texte de la dernière séquence^\";\n  print \"  - EXIT : Quitter^\";\n  rtrue;\n];\n\n[ exit;\n  print \"Bye-bye !^\";\n  @quit;\n];\n\n[ undo;\n  print \"Undo: not implemented yet !^\";\n  rtrue;\n];\n\n[ redo;\n  if (confirm(\"Recommencer depuis le début ?\")) {\n    markForRedo = 1;\n    rtrue;\n  }\n  rfalse;\n];\n\n[ inventory empty;\n  empty = true;\n  ${ underline() }print \"Liste des objets de l'inventaire:^\";\n  ${ roman() }${varsAsArray.map(v => 'if (' + v.identifier + ') {\\n    print \"* ' + v.desc + '^\";\\n    empty = false;\\n  }').join('\\n  ')}\n  if (empty) print \"Votre inventaire est vide !^\";\n  rtrue;\n];\n\n\n! Routines\n!-----------------------------------\n\n[ addOrRemoveObject obj;\n  if (obj) {\n    ++status_field_1;\n    print \"Objet récupéré : \";\n  } else {\n    --status_field_1;\n    print \"Objet perdu : \";\n  }\n  rtrue;\n];\n\n[ inverse obj;\n  if (obj) rfalse; else rtrue;\n];\n\n[ startScreen;\n  ${ underline() }print \"Cette histoire a été exportée avec Moiki Exporter.^La version originelle est accessible ici : https://moiki.fr/story/${_id}^^\";\n  ${ roman() }print \"Moiki présente:^\";\n  ${ bold() }print \"${meta.name}^^\";\n  ${ roman() }print \"Une histoire de ${getAuthor(meta)}^^${meta.description}^\";\n  rtrue;\n];\n\n[ startGameLoop next res;\n  next = ${convertId(firstSequence)};\n  do {\n    ++status_field_2; ! increase turn counter\n    res = next();\n    if (markForShow == 1) {\n      markForShow = 0;\n      res = next;\n    }\n    if (markForRedo == 1) {\n      res = false;\n    }\n    next = res;\n    print \"^\";\n  } until(~~next);\n  if (gameOver > 0) {\n    ${ bold(2) }if (gameOver == 1) {\n      print \"Gagné !^^\";\n    } else if (gameOver == 2) {\n      print \"Perdu !^^\";\n    }\n    ${ roman(2) }gameOver = 0;\n  }\n];\n\n[ Main replay;\n  startScreen();\n  wait();\n  do {\n    cls();\n    replay = false;\n    clearObjects();\n    status_field_1 = 0; ! reset score counter\n    status_field_2 = 0; ! reset turns counter\n    startGameLoop();\n    if (markForRedo == 1) {\n      markForRedo = 0;\n      replay = true;\n    } else if (confirm(\"Lancer une autre partie ? (oui/non)\")) {\n      replay = true;\n    } else {\n      exit();\n    }\n  } until(~~replay);\n];\n\n\n! Story sequences\n! ------------------------------------------\n\n`\n  for (let sequence of sequences) {\n    const { statements, vars } = getNodeDescription(sequence, variables)\n    result += `[ ${convertId(sequence.id)}${vars && vars.length > 0 ? ' ' + vars.join(' ') : ''};\\n  ${statements}\\n];\\n\\n`\n  }\n  return result\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","import kebabCase from 'lodash.kebabcase'\nimport { v4 as uuidv4 } from 'uuid'\nimport { getHeader, getAuthor } from '../utils'\n\nconst convertId = id => id.replace(/-/gi, '_')\nconst cleanContent = content => (\n  content\n    .replace(/(<(strong|b|h\\d)>\\s)/gi, ' <b>')\n    .replace(/(\\s<\\/(strong|b|h\\d)>)/gi, '</b> ')\n    .replace(/(<em>\\s)/gi, ' <em>')\n    .replace(/(\\s<\\/em>)/gi, '</em> ')\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/(<([/p]+)>)/gi, '')\n    .replace(/(<([/]*)(strong|b|h\\d)>)/gi, \"''\")\n    .replace(/(<([/]*)(em)>)/gi, '//')\n    .replace(/(<([/]*)(span)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/(<br(\\s)*(\\/)*>)/gi, ' ')\n    .replace(/&nbsp;/gi, ' ')\n    .replace(/(\\s)+/gi, ' ')\n    .trim()\n)\n\nconst esc = content => content.replace(/\"/gi, '\\\\\"')\n\nconst addCondition = (data, variables, kind='goto') => (\n`(if: ${variables[data.condition.params].tweeVar})[(${kind}: \"${convertId(data.condition.next)}\")]\n(else:)[(${kind}: \"${convertId(data.next)}\")]\n`)\n\nconst addLink = (data, variables) => {\n  const condition = (data.condition && data.condition.next && data.condition.params) ? data.condition.params : null\n  const actionId = (data.action && data.action.params && typeof data.action.params === 'string') ? data.action.params : null\n  const next = data.next ? convertId(data.next) : null\n  const content = esc(cleanContent(data.content))\n  if (actionId) {\n    const {tweeVar, desc} = variables[actionId]\n    return `(link: \"${content}\")[(set: ${tweeVar} to not ${tweeVar}, $actionText to \"${esc(desc)}\", $actionPassage to \"${next}\", $isObjectWin to ${tweeVar})[(goto: \"Toggle-Object\")]]\\n`\n  } else if (condition) {\n    return `(link: \"${content}\")[${addCondition(data, variables)}]\\n`\n  } else if (next) {\n    return `(link: \"${content}\")[(goto: \"${next}\")]\\n`\n  }\n  return ''\n}\n\nconst addNext = (data, variables) => {\n  const condition = (data.condition && data.condition.next && data.condition.params) ? data.condition.params : null\n  const actionId = (data.action && data.action.params && typeof data.action.params === 'string') ? data.action.params : null\n  const next = data.next ? convertId(data.next) : null\n  if (actionId) {\n    const {tweeVar, desc} = variables[actionId]\n    return `(set: ${tweeVar} to not ${tweeVar}, $actionText to \"${esc(desc)}\", $actionPassage to \"${next}\", $isObjectWin to ${tweeVar})[(display: \"Toggle-Object\")]\\n`\n  } else if (condition) {\n    return `${addCondition(data, variables, 'display')}\\n`\n  } else if (next) {\n    return `(display: \"${next}\")\\n`\n  }\n  return ''\n}\n\nexport const convertToHarlowe = (story) => {\n  const { _id, meta, firstSequence, sequences, assets } = story\n\n  let variables = {}\n  for (let asset of assets) {\n    variables[asset.id] = {\n      tweeVar: '$' + convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n  \n  let result = `<!--\n${getHeader(_id)}\n-->\n\n:: StoryAuthor\n${getAuthor(meta)}\n\n:: StoryTitle\n${meta.name}\n\n:: StorySubtitle\n${meta.description}\n\n:: StoryData\n{\n  \"ifid\": \"${uuidv4()}\",\n  \"format\": \"Harlowe\",\n  \"format-version\": \"3.1.0\",\n  \"start\": \"${convertId(firstSequence)}\",\n  \"zoom\": 1\n}\n\n`\n  const varsAsArray = Object.entries(variables).map(([_, data]) => data)\n  let variablesSetup = '(set: $actionText to false, $actionPassage to false, $isObjectWin to false)\\n'\n  for (let variable of varsAsArray) {\n    variablesSetup += '(set: ' + variable.tweeVar + ' to false)\\n'\n  }\n\n  for (let sequence of sequences) {\n    const text = cleanContent(sequence.content)\n    result += '\\n:: ' + convertId(sequence.id) + '\\n' + text + '\\n'\n    if (sequence.choices && sequence.choices.length > 0) {\n      for (let choice of sequence.choices) {\n        result += addLink(choice, variables)\n      }\n    } else {\n      result += addNext(sequence, variables)\n    }\n    if (sequence.id === firstSequence) {\n      result += variablesSetup\n    }\n  }\n\n  result += `\n:: Toggle-Object\n(if: $isObjectWin)[Objet récupéré : {$actionText}]\n(else:)[Objet perdu : {$actionText}]\n(display: $actionPassage)\n`\n  return result\n}","import kebabCase from 'lodash.kebabcase'\nimport { v4 as uuidv4 } from 'uuid'\nimport { getHeader, getAuthor } from '../utils'\n\nconst convertId = id => id.replace(/-/gi, '_')\nconst cleanContent = content => (\n  content\n    .replace(/(<(strong|b|h\\d)>\\s)/gi, ' <b>')\n    .replace(/(\\s<\\/(strong|b|h\\d)>)/gi, '</b> ')\n    .replace(/(<em>\\s)/gi, ' <em>')\n    .replace(/(\\s<\\/em>)/gi, '</em> ')\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/(<([/p]+)>)/gi, '')\n    .replace(/(<([/]*)(strong|b|h\\d)>)/gi, \"''\")\n    .replace(/(<([/]*)(em)>)/gi, '//')\n    .replace(/(<([/]*)(span)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/(<br(\\s)*(\\/)*>)/gi, ' ')\n    .replace(/&nbsp;/gi, ' ')\n    .replace(/(\\s)+/gi, ' ')\n    .trim()\n)\n\nconst esc = content => content.replace(/\"/gi, '\\\\\"')\n\nconst addCondition = (data, variables, content=null) => {\n  const ifContent = content ? `[[${content}|${convertId(data.condition.next)}]]` : `<<include \"${convertId(data.condition.next)}\">>`\n  const elseContent = content ? `[[${content}|${convertId(data.next)}]]` : `<<include \"${convertId(data.next)}\">>`\n  return (\n`<<if ${variables[data.condition.params].tweeVar}>>\n  ${ifContent}\n<<else>>\n  ${elseContent}\n<</if>>\n`)}\n\nconst addLink = (data, variables) => {\n  const condition = (data.condition && data.condition.next && data.condition.params) ? data.condition.params : null\n  const actionId = (data.action && data.action.params && typeof data.action.params === 'string') ? data.action.params : null\n  const next = data.next ? convertId(data.next) : null\n  const content = esc(cleanContent(data.content))\n  if (actionId) {\n    const {tweeVar, desc} = variables[actionId]\n    return `[[${content}|Toggle-Object][${tweeVar} to not ${tweeVar}; $actionText to \"${esc(desc)}\"; $actionPassage to \"${next}\"; $isObjectWin to ${tweeVar}]]\\n`\n  } else if (condition) {\n    return `${addCondition(data, variables, content)}\\n`\n  } else if (next) {\n    return `[[${content}|${next}]]\\n`\n  }\n  return ''\n}\n\nconst addNext = (data, variables) => {\n  const condition = (data.condition && data.condition.next && data.condition.params) ? data.condition.params : null\n  const actionId = (data.action && data.action.params && typeof data.action.params === 'string') ? data.action.params : null\n  const next = data.next ? convertId(data.next) : null\n  if (actionId) {\n    const {tweeVar, desc} = variables[actionId]\n    return `<<set ${tweeVar} to not ${tweeVar}; $actionText to \"${esc(desc)}\"; $actionPassage to \"${next}\"; $isObjectWin to ${tweeVar}>>\\n<<include \"Toggle-Object\">>\\n`\n  } else if (condition) {\n    return `${addCondition(data, variables)}\\n`\n  } else if (next) {\n    return `<<include \"${next}\">>\\n`\n  }\n  return ''\n}\n\nexport const convertToSugarcube = (story) => {\n  const { _id, meta, firstSequence, sequences, assets } = story\n\n  let variables = {}\n  for (let asset of assets) {\n    variables[asset.id] = {\n      tweeVar: '$' + convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n  \n  let result = `<!--\n${getHeader(_id)}\n-->\n\n:: StoryAuthor\n${getAuthor(meta)}\n\n:: StoryTitle\n${meta.name}\n\n:: StorySubtitle\n${meta.description}\n\n:: StoryData\n{\n  \"ifid\": \"${uuidv4()}\",\n  \"format\": \"SugarCube\",\n  \"format-version\": \"2.31.1\",\n  \"start\": \"${convertId(firstSequence)}\",\n  \"zoom\": 1\n}\n\n`\n  const varsAsArray = Object.entries(variables).map(([_, data]) => data)\n  let variablesSetup = '<<set $actionText to false; $actionPassage to false; $isObjectWin to false>>\\n'\n  for (let variable of varsAsArray) {\n    variablesSetup += '<<set ' + variable.tweeVar + ' to false>>\\n'\n  }\n\n  for (let sequence of sequences) {\n    const text = cleanContent(sequence.content)\n    result += '\\n:: ' + convertId(sequence.id) + '\\n' + text + '\\n'\n    if (sequence.choices && sequence.choices.length > 0) {\n      for (let choice of sequence.choices) {\n        result += addLink(choice, variables)\n      }\n    } else {\n      result += addNext(sequence, variables)\n    }\n    if (sequence.id === firstSequence) {\n      result += variablesSetup\n    }\n  }\n\n  result += `\n:: Toggle-Object\n<<if $isObjectWin>>\n  récupéré : $actionText\n<<else>>\n  perdu : $actionText\n<</if>>\n<<include [[$actionPassage]]>>\n`\n  return result\n}","import { convertToHarlowe } from './twee-harlowe'\nimport { convertToSugarcube } from './twee-sugarcube'\n\nexport const convertToTwee = (story, format) => {\n  if (format === 'harlowe') {\n    return convertToHarlowe(story)\n  }\n  if (format === 'sugarcube') {\n    return convertToSugarcube(story)\n  }\n  throw new Error('This format is unvailable!')\n}","import kebabCase from 'lodash.kebabcase'\nimport { getAuthor } from '../utils'\n\nconst convertId = id => id.replace(/-/gi, '_')\nconst cleanContent = content => (\n  content\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/(<([/p]+)>)/gi, '')\n    .replace(/(<(strong|b|h\\d)>\\s)/gi, ' <b>')\n    .replace(/(\\s<\\/(strong|b|h\\d)>)/gi, '</b> ')\n    .replace(/(<([/]*)(strong|b|h\\d)>)/gi, \"**\")\n    .replace(/(<em>\\s)/gi, ' <em>')\n    .replace(/(\\s<\\/em>)/gi, '</em> ')\n    .replace(/(<([/]*)(em)>)/gi, '_')\n    .replace(/(<([/]*)(span)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/(<br(\\s)*(\\/)*>)/gi, '+n+')\n    .replace(/(&nbsp;)+/gi, ' ')\n    .replace(/(\\s)+/gi, ' ')\n    .trim()\n)\n\nexport const convertToJdrBot = (story) => {\n  const { meta, firstSequence, sequences, assets, sounds } = story\n\n  const getSequenceByIndex = (id) => (sequences.findIndex(s => s.id === id) + 2)\n\n  let variables = {}\n  for (let asset of assets) {\n    variables[asset.id] = {\n      storyVar: convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n\n  const rooms = []\n  const specialRooms = []\n  let nextSpecialRoomId = sequences.length + 2\n\n  const addObjectRoom = (object, nextId) => {\n    const objectRoomId = nextSpecialRoomId\n    // condition to check if object should be win / lose\n    specialRooms.push({\n      id: objectRoomId,\n      events: [\n        `997|${object.storyVar}|${objectRoomId + 2}|null\\n`, // object should be lose\n        `997|null|${objectRoomId + 1}|null\\n` // object should be win\n      ]\n    })\n    // win object\n    specialRooms.push({\n      id: objectRoomId + 1,\n      action: `${object.storyVar}|invisible|null|récupéré: ${object.desc.trim()}|null`,\n      events: [`997|null|${nextId}|null\\n`]\n    })\n    // lose object\n    specialRooms.push({\n      id: objectRoomId + 2,\n      action: `-${object.storyVar}|invisible|null|perdu: ${object.desc.trim()}|null`,\n      events: [`997|null|${nextId}|null\\n`]\n    })\n    nextSpecialRoomId += 3\n    return objectRoomId\n  }\n\n  /* Manage story header */\n  let headRoom = '1 _start_\\n'\n  if (meta.image) {\n    headRoom += `[[${meta.image}]]+n+&&\\nCrédit photo : Unsplash+n+&&\\n`\n  }\n  headRoom += `Une histoire de ${getAuthor(meta).trim()}+n+&&\\n`\n  headRoom += `(exporté via https://moiki.fr)+n++n+&&\\n`\n  headRoom += `${meta.description}\\n|\\n`\n  headRoom += `997|null|${getSequenceByIndex(firstSequence)}|null\\n`\n  headRoom += `*****`\n  rooms.push({id: '$start', room: headRoom})\n\n  /* Convert sequences */\n  for (let sequence of sequences) {\n    let thisRoom = ''\n    const text = cleanContent(sequence.content)\n    thisRoom += getSequenceByIndex(sequence.id) + ' ' + sequence.id + '\\n'\n    /*\n    // sound are not really well managed on discord, and they could be annoying... so skipping this part.\n    if (sequence.soundLoop && sequence.soundLoop.sound) {\n      const snd = sounds.find(s => s.id === sequence.soundLoop.sound)\n      if (snd && snd.sound && snd.sound.previews && snd.sound.previews['preview-lq-mp3'])\n      thisRoom += '<<' + snd.sound.previews['preview-lq-mp3'] + '>>'\n    }\n    */\n    thisRoom += '[[' + text.split('\\n').map(x => `${x}+n+`).join('') + ']]'\n\n    if (sequence.choices && sequence.choices.length > 0) {\n      /*\n        This is a choice sequence\n      */\n      const nextRooms = []\n      let index = 1\n      for (let choice of sequence.choices) {\n        const nextId = getSequenceByIndex(choice.next)\n        if (choice.condition && choice.condition.next && choice.condition.params) {\n          specialRooms.push({\n            id: nextSpecialRoomId,\n            events: [\n              `997|${variables[choice.condition.params].storyVar}|${getSequenceByIndex(choice.condition.next)}|null\\n`,\n              `997|null|${nextId}|null\\n`\n            ]\n          })\n          thisRoom += `+n+&&\\n${cleanContent(choice.content)} (${index})`\n          nextRooms.push(nextSpecialRoomId)\n          ++nextSpecialRoomId\n        } else if (choice.action && choice.action.params && typeof choice.action.params === 'string') {\n          const actionRoomId = addObjectRoom(variables[choice.action.params], nextId)\n          thisRoom += `+n+&&\\n${cleanContent(choice.content)} (${index})`\n          nextRooms.push(actionRoomId)\n        } else {\n          thisRoom += `+n+&&\\n${cleanContent(choice.content)} (${index})`\n          nextRooms.push(nextId)\n        }\n        ++index\n      }\n      if (nextRooms.length > 0) {\n        thisRoom += '\\n|\\n'\n        index = 1\n        for (let next of nextRooms) {\n          thisRoom += index + '->' + next + '\\n'\n          ++index\n        }\n      }\n    } else if (sequence.final || !sequence.next) {\n      /*\n        This is a final sequence\n      */\n      thisRoom += '\\n|\\n'\n      if (sequence.final && sequence.isHappyEnd) {\n        thisRoom += '999|Tu as gagné ! Bravo !\\n'\n      } else {\n        thisRoom += '998|Tu as perdu ! Recommence, je suis sûr que tu peux y arriver !\\n'\n      }  \n    } else {\n      /*\n        This is a simple sequence\n      */\n      const nextId = getSequenceByIndex(sequence.next)\n      thisRoom += '\\n|\\n'\n      if (sequence.action && sequence.action.params && typeof sequence.action.params === 'string') {\n        const actionRoomId = addObjectRoom(variables[sequence.action.params], nextId)\n        thisRoom += `997|null|${actionRoomId}|null\\n`\n      } else {\n        if (sequence.condition) {\n          thisRoom += `997|${variables[sequence.condition.params].storyVar}|${getSequenceByIndex(sequence.condition.next)}|null\\n`\n        }\n        thisRoom += `997|null|${nextId}|null\\n`\n      }\n    }\n    thisRoom += '*****'\n    rooms.push({id: sequence.id, room: thisRoom})\n  }\n\n  /*\n    Special rooms used for conditions / objects\n  */\n  for (let {id, events, action} of specialRooms) {\n    let room = id + ' condition-room-' + id + '\\n'\n    room += 'null\\n'\n    room += action ? action : '|'\n    room += '\\n' + events.join('')\n    room += '*****'\n    rooms.push({id, room})\n  }\n\n  return meta.name + '\\n' + rooms.length + '\\n' + rooms.map(({room}) => room).join('\\n') + '\\n1§1️⃣|2§2️⃣|3§3️⃣'\n}"],"names":["object","callback","reAsciiWord","reLatin","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsLowerMisc","rsUpperMisc","reOptMod","rsModifier","rsSeq","join","rsEmoji","reApos","RegExp","reComboMark","reUnicodeWord","reHasUnicodeWord","freeSelf","self","Object","root","global","Function","deburrLetter","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","key","undefined","objectToString","prototype","toString","Symbol","symbolProto","symbolToString","value","isObjectLike","call","isSymbol","result","baseToString","word","index","toLowerCase","string","array","iteratee","accumulator","initAccum","length","arrayReduce","pattern","guard","test","hasUnicodeWord","match","unicodeWords","asciiWords","words","replace","deburr","getHeader","storyId","Date","toLocaleDateString","weekday","year","month","day","hour","minute","second","getAuthor","story","author","firstname","lastname","pseudo","sequences","firstSequence","vars","cleanTextFn","tree","addLink","id","to","isBackLink","in","push","allSequencesById","s","choices","choice","content","condition","next","params","chapters","treeArray","entries","map","data","node","chap","currentId","chain","chainWithObjects","action","objectAction","chainSum","contentSum","chainObj","trim","chainedContent","forEach","seq","rest","convertId","cleanContent","addCondition","variables","inkVar","addAction","prefix","desc","convertToInk","_id","meta","assets","asset","kebabCase","label","name","image","description","varsAsArray","_","variable","sequence","text","choiceContent","directions","getChoiceGotoFunctionFromIndex","Error","getChoiceLinkValue","identifier","getNodeDescription","choicesDescription","choicesLinks","choiceIndex","gotoFunction","gotoValue","l","isHappyEnd","convertToInform","format","split","v","d","idx","convertToI6WithParser","writeStyle","style","tabs","repeat","bold","underline","roman","statements","listVars","link","i","convertToI6Raw","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","byteToHex","substr","v4","options","buf","offset","Array","rnds","random","ii","bytesToUuid","esc","kind","tweeVar","actionId","addNext","ifContent","elseContent","convertToTwee","uuidv4","variablesSetup","convertToHarlowe","convertToSugarcube","convertToJdrBot","getSequenceByIndex","findIndex","storyVar","rooms","specialRooms","nextSpecialRoomId","addObjectRoom","nextId","objectRoomId","events","headRoom","room","thisRoom","x","nextRooms","actionRoomId","final"],"mappings":"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"}