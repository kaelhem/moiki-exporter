{"version":3,"file":"moiki-exporter.m.js","sources":["../src/utils.js","../node_modules/lodash.kebabcase/index.js","../src/migration-utils.js","../src/ink/index.js","../src/inform/inform6-utils.js","../src/inform/index.js","../src/inform/inform6.js","../src/index.js"],"sourcesContent":["const getDate = () => {\n  const dateOptions = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  }\n  return new Date().toLocaleDateString('en-US', dateOptions)\n}\n\nexport const getHeader = (storyId) => (\n`This story was created with Moiki, and converted with Moiki-Exporter\nMore info: https://github.com/kaelhem/moiki-exporter\nLaunch it with the Moiki player: https://moiki.fr/story/${storyId}\nExported on ${getDate()}`\n)\n\nexport const getAuthor = (story) => {\n  if (story && story.author) {\n    const { firstname, lastname, pseudo } = story.author\n    return pseudo ? pseudo : firstname + ' ' + lastname\n  }\n  return 'Inconnu'\n}\n\n/*\n  This WTF function allow to chain simple sequences as it was one.\n  It returns an array of sequences with this added attributes :\n    * chain: array of chained sequences (this one included)\n    * chainedContent: an array with either : \n      + cumulated text of the chained sequences (as strings)\n      + object that corresponding to won objects\n      ex.: ['text of several sequences', {sequenceAction}, 'text of following sequences']\n\n  /!\\ this method is destructive for the sequences object pass in. You should use a deep copy to keep you data untouched.\n*/\nexport const simplifyStory = ({sequences, firstSequence, assets}, vars, cleanTextFn) => {\n  const tree = {}\n\n  const addLink = (id, to, isBackLink=false) => {\n    if (!tree[id]) {\n      tree[id] = {in: [], to: []}\n    }\n    if (!isBackLink) {\n      tree[id].to.push(to)\n      addLink(to, id, true)\n    } else {\n      tree[id].in.push(to)\n    }\n  }\n\n  const allSequencesById = {}\n\n  for (let s of sequences) {\n    allSequencesById[s.id] = s\n    if (s.choices && s.choices.length > 0) {\n      for (let choice of s.choices) {\n        choice.content = cleanTextFn(choice.content)\n        if (choice.conditions && choice.conditions.length > 0) {\n          for (let cond of choice.conditions) {\n            if (cond.next) {\n              addLink(s.id, cond.next)\n            }\n          }\n        } else if (choice.next) {\n          addLink(s.id, choice.next)\n        }\n      }\n    } else {\n      if (s.conditions && s.conditions.length > 0) {\n        for (let cond of s.conditions) {\n          if (cond.next) {\n            addLink(s.id, cond.next)\n          }\n        }\n      } else if (s.next) {\n        addLink(s.id, s.next)\n      }\n    }\n  }\n  \n  const chapters = [allSequencesById[firstSequence]]\n  const treeArray = Object.entries(tree).map(([index, data]) => ({data, index}))\n  for (let node of treeArray) {\n    if ((node.data.in.length > 1 || (node.data.in.length === 1 && tree[node.data.in[0]].to.length > 1)) && node.index !== firstSequence) {\n      chapters.push(allSequencesById[node.index])\n    }\n  }\n  for (let chap of chapters) {\n    let currentId = chap.id\n    const chain = [allSequencesById[currentId]]\n    while (tree[currentId].to.length === 1) {\n      currentId = tree[currentId].to[0]\n      chain.push(allSequencesById[currentId])\n    }\n    chap.chain = chain\n\n    const chainWithActions = []\n    for (let node of chain) {\n      chainWithActions.push(node)\n      if (node.actions && node.actions.length === 1 && node.actions[0] && node.actions[0].params) {\n        chainWithActions.push({objectAction: vars[node.actions[0].params.target], kind: node.actions[0].kind})\n      }\n    }\n    const chainSum = []\n    let contentSum = ''\n    for (let chainObj of chainWithActions) {\n      if (chainObj.objectAction) {\n        if (contentSum) {\n          chainSum.push(contentSum.replace(/(\\s)*<br(\\s)*\\/>(\\s)*/gi, '\\u000D\\u000A').trim())\n          contentSum = ''\n        }\n        chainSum.push({...chainObj.objectAction, actionKind: chainObj.kind})\n      } else {\n        contentSum += cleanTextFn(chainObj.content) + ' '\n      }\n    }\n    if (contentSum) {\n      chainSum.push(contentSum.replace(/(\\s)*<br(\\s)*\\/>(\\s)*/gi, '\\u000D\\u000A').trim())\n    }\n    chap.chainedContent = chainSum\n  }\n  chapters.forEach(seq => {\n    seq.chain = seq.chain.map(({chain, chainedContent, ...rest}) => ({...rest}))\n  })\n  return chapters\n}","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = kebabCase;\n","const CURRENT_SCHEMA_VERSION = 2\n\nexport const migrate = (story) => {\n  const storyVersion = story.meta.version || 1\n  story.meta.version = CURRENT_SCHEMA_VERSION\n  switch (storyVersion) {\n    case 1: return fromV1(story)\n    default: return fromV2(story)\n  }\n}\n\nconst fromCommon = (story) => {\n  const {_id, meta, firstSequence, sequences, theme, assets=[], sounds=[], counters=[], stats={numView: 0}} = story\n  return {\n    _id,\n    meta,\n    theme,\n    firstSequence: firstSequence || (sequences && sequences.length > 0 ? sequences[0].id : 'intro'),\n    sequences: sequences && sequences.length > 0 ? sequences : [{\n      id: 'intro',\n      content: ''\n    }],\n    counters,\n    assets,\n    sounds,\n    stats\n  }\n}\n\nconst fromV2 = (story) => {\n  return fromCommon(story)\n}\n\nconst fromV1 = (story) => {\n  const converted = fromCommon(story)\n  return {\n    ...converted,\n    meta: {\n      ...converted.meta,\n      simplified: true\n    },\n    sequences: converted.sequences.map((s) => {\n      const {_doc} = s\n      const {action, condition, ...seq} = (_doc || s)\n      if (action && action.params) {\n        seq.actions = [{\n          kind: 'object',\n          params: {\n            target: action.params,\n            modifier: 'toggle'\n          }\n        }]\n      }\n      if (condition && condition.params && condition.next) {\n        seq.conditions = [{\n          kind: 'object',\n          query: {\n            params: [{\n              target: condition.params,\n              condition: 'with'\n            }]\n          },\n          next: condition.next\n        }]\n      }\n      if (seq.choices && seq.choices.length > 0) {\n        seq.choices = seq.choices.map((c) => {\n          const {_doc:chDoc} = c\n          const {action:chAction, condition:chCond, ...ch} = (chDoc || c)\n          if (chAction && chAction.params) {\n            ch.actions = [{\n              kind: 'object',\n              params: {\n                target: chAction.params,\n                modifier: 'toggle'\n              }\n            }]\n          }\n          if (chCond && chCond.params && chCond.next) {\n            ch.conditions = [{\n              kind: 'object',\n              query: {\n                params: [{\n                  target: chCond.params,\n                  condition: 'with'\n                }]\n              },\n              next: chCond.next\n            }]\n          }\n          return ch\n        })\n      }\n      return seq\n    })\n  }\n}","import kebabCase from 'lodash.kebabcase'\nimport { getHeader, getAuthor } from '../utils'\n\nconst convertId = id => id.replace(/-/gi, '_')\nconst cleanContent = content => {\n  return content\n    .replace(/(<(strong|b)>\\s)/gi, ' <b>')\n    .replace(/(\\s<\\/(strong|b)>)/gi, '</b> ')\n    .replace(/(<em>\\s)/gi, ' <em>')\n    .replace(/(\\s<\\/em>)/gi, '</em> ')\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/(<([/p]+)>)/gi, '')\n    .replace(/(<([/]*)(span)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/&nbsp;/gi, ' ')\n    .replace(/(\\s)+/gi, ' ')\n    .trim()\n}\n\nconst INDENT = '  '\n\nexport const convertToInk = (story) => {\n  const { _id, meta, firstSequence, sequences, assets, counters } = story\n\n  let objectVariables = {}\n  for (let asset of assets) {\n    objectVariables[asset.id] = {\n      inkVar: '_object_' + convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n\n  let counterVariables = {}\n  for (let counter of counters) {\n    counterVariables[counter.id] = {\n      inkVar: '_counter_' + convertId(kebabCase(counter.name)),\n      ...counter\n    }\n  }\n\n  const convertObjectCondition = (condition, target) => {\n    const {inkVar} = objectVariables[target]\n    switch (condition) {\n      case 'with': return inkVar\n      case 'without': return `not ${inkVar}`\n      default: console.warn('This type of object condition is unknown:', condition)\n    }\n    return null\n  }\n\n  const convertCounterCondition = (condition, target, value) => {\n    const {inkVar} = counterVariables[target]\n    if (isNaN(value) || typeof value !== 'number') {\n      console.warn('The value of this counter condition is invalid:', value)\n      return null\n    }\n    switch (condition) {\n      case '=': case '!=': case '<': case '<=': case '>': case '>=': {\n        return `${inkVar} ${condition} ${value}`\n      }\n      default: console.warn('This type of counter condition is unknown:', condition)\n    }\n    return null\n  }\n\n  const convertPassageCondition = (condition, target) => {\n    switch (condition) {\n      case 'by': return `${convertId(target)}`\n      case 'not-by': return `not ${convertId(target)}`\n      default: console.warn('This type of passage condition is unknown:', condition)\n    }\n    return null\n  }\n\n  const convertMultipleCondition = (allConditions) => {\n    const res = []\n    for (let c of allConditions) {\n      const {kind, condition, target, value} = c\n      res.push(convertCondition(kind, [{condition, target, value}]))\n    }\n    return res.filter(x => x !== null)\n  }\n\n  const convertCondition = (kind, params, operator) => {\n    const [{condition, target, value}] = params\n    switch (kind) {\n      case 'object': return convertObjectCondition(condition, target)\n      case 'counter': return convertCounterCondition(condition, target, value)\n      case 'passage': return convertPassageCondition(condition, target)\n      case 'multiple': {\n        const multiCond = convertMultipleCondition(params)\n        console.log(multiCond)\n        return multiCond && multiCond.length > 0 ? multiCond.join(operator === 'and' ? ' && ' : ' || ') : null\n      }\n      default: {\n        console.warn('This kind of condition is unknown:', kind)\n      }\n    }\n  }\n\n  const addConditions = (conditions, defaultNext, newLine=false) => {\n    const inkConditions = conditions.map(c => {\n      const {kind, next, query: {params, operator=null}} = c\n      const cond = convertCondition(kind, params, operator)\n      return {cond, next}\n    })\n    let strConditions = null\n    if (inkConditions && inkConditions.length > 0) {\n      strConditions = [...inkConditions, {cond: 'else', next: defaultNext}]\n        .map(({cond, next}) => `- ${cond}:\\n${INDENT}-> ${convertId(next)}`)\n        .join('\\n')\n        .replace(/\\n/g, `\\n${INDENT}`)\n    }\n    const lf = newLine ? '\\n' : ''\n    return strConditions ? `${lf}{\\n${INDENT}${strConditions}\\n}\\n` : `-> ${convertId(defaultNext)} \\n`\n  }\n\n  const convertObjectAction = ({target, modifier}) => {\n    const {inkVar, label, desc} = objectVariables[target]\n    switch (modifier) {\n      case 'toggle': {\n        return [\n          `~ ${inkVar} = !${inkVar}`,\n          `{ ${inkVar}:`,\n          `${INDENT}<em>Objet récupéré : ${label} - \"${desc}\"</em>`,\n          `- else:`,\n          `${INDENT}<em>Objet perdu : ${label} - \"${desc}\"</em>`,\n          `}`\n        ]\n      }\n      case 'add': {\n        return [\n          `{ not ${inkVar}:`,\n          `${INDENT}~ ${inkVar} = true`,\n          `${INDENT}<em>Objet récupéré : ${label} - \"${desc}\"</em>`,\n          `}`\n        ]\n      }\n      case 'sub': {\n        return [\n          `{ ${inkVar}:`,\n          `${INDENT}~ ${inkVar} = false`,\n          `${INDENT}<em>Objet perdu : ${label} - \"${desc}\"</em>`,\n          `}`\n        ]\n      }\n      default: console.warn('This action modifier is unknown:', modifier)\n    }\n    return null\n  }\n\n  const convertCounterAction = ({target, modifier, value}) => {\n    const {inkVar, name, gauge} = counterVariables[target]\n    switch (modifier) {\n      case 'set': {\n        const defaultAction = [`~ ${inkVar} = ${value}`]\n        return gauge ? [\n          ...defaultAction,\n          `<em>${name} vaut maintenant : ${value}</em>`\n        ] : defaultAction\n      }\n      case 'add': {\n        const defaultAction = [`~ ${inkVar} += ${value}`]\n        return gauge ? [\n          ...defaultAction,\n          `<em>${name} augmente de ${value} et vaut maintenant : {${inkVar}}</em>`\n        ] : defaultAction\n      }\n      case 'sub': {\n        const defaultAction = [`~ ${inkVar} -= ${value}`]\n        return gauge ? [\n          ...defaultAction,\n          `<em>${name} diminue de ${value} et vaut maintenant : {${inkVar}}</em>`\n        ] : defaultAction\n      }\n      default: console.warn('This action modifier is unknown:', modifier)\n    }\n    return null\n  }\n\n  const convertAction = ({kind, params}) => {\n    switch (kind) {\n      case 'object': return convertObjectAction(params)\n      case 'counter': return convertCounterAction(params)\n      default: {\n        console.warn('This kind of action is unknown:', kind)\n      }\n    }\n  }\n\n  const addActions = (actions) => {\n    const listActions = []\n    for (let act of actions) {\n      const action = convertAction(act)\n      action && listActions.push(action.join('\\n'))\n    }\n    if (listActions && listActions.length > 0) {\n      return listActions.join('\\n') + '\\n'\n    }\n    return null\n  }\n  \n  let result = `/*\n${getHeader(_id)}\n*/\n\n# author: ${getAuthor(meta)}\n# title: ${meta.name}\n`\n  if (meta.image) {\n    result += `# IMAGE: ${meta.image.replace(/\\//gi, '\\\\/')}\n<em>Crédit photo : <a href=\"${'https://unsplash.com'.replace(/\\//gi, '\\\\/')}\">Unsplash</a></em>\n`\n  }\n  result += '<em>' + meta.description + '</em>\\n<hr/>\\n'\n\n  const objectVarsAsArray = Object.entries(objectVariables).map(([_, data]) => data)\n  for (let {inkVar} of objectVarsAsArray) {\n    result += 'VAR ' + inkVar + ' = false\\n'\n  }\n  const counterVarsAsArray = Object.entries(counterVariables).map(([_, data]) => data)\n  for (let {inkVar, defaultValue=0} of counterVarsAsArray) {\n    result += `VAR ${inkVar} = ${defaultValue}\\n`\n  }\n\n  result += '\\n-> ' + convertId(firstSequence) + '\\n'\n\n  for (let sequence of sequences) {\n    const text = cleanContent(sequence.content)\n    result += '\\n=== ' + convertId(sequence.id) + ' ===\\n'\n    result += text + '\\n'\n    if (sequence.choices && sequence.choices.length > 0) {\n      for (let choice of sequence.choices) {\n        let actions = ' '\n        if (choice.actions && choice.actions.length > 0) {\n          actions = addActions(choice.actions)\n        }\n        let prefix = '+ '\n        if (choice.showCondition && choice.showCondition.kind) {\n          const {kind, query: {params, operator=null}} = choice.showCondition\n          prefix += '{' + convertCondition(kind, params, operator) + '} '\n        }\n        let choiceContent = prefix + '[' + cleanContent(choice.content) + ']' + actions\n        if (choice.conditions && choice.conditions.length > 0) {\n          result += `${choiceContent} ${addConditions(choice.conditions, choice.next, true)}`\n        } else {\n          result += choiceContent + '-> ' + convertId(choice.next) + '\\n'\n        }\n      }\n      result += '# CLEAR\\n'\n    } else {\n      if (sequence.actions && sequence.actions.length > 0) {\n        result += addActions(sequence.actions)\n      }\n      if (sequence.conditions && sequence.conditions.length > 0) {\n        result += addConditions(sequence.conditions, sequence.next)\n      } else if (sequence.next) {\n        result += '-> ' + convertId(sequence.next) + '\\n'\n      } else {\n        result += '-> END\\n'\n      }\n    }\n  }\n  return result\n}","export const convertId = (id, prefix= 'story') => {\n  if (!id) {\n    return null\n  }\n  const pre = prefix ? prefix + '_' : ''\n  return pre + id.replace(/-/gi, '_')\n}\n\nexport const cleanContent = (content) => {\n  return content\n    .replace(/(<\\/*(strong|b)>)/gi, '')\n    .replace(/(<\\/*(em)>)/gi, '')\n    .replace(/(<\\/*(h\\d)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/<\\/*p>/gi, '')\n    .replace(/(<\\/*(span)>)/gi, '')\n    .replace(/(\\s)+/gi, ' ')\n    .replace(/©/gim, '(c)')\n    .replace(/@/gim, '@@64')\n    .replace(/\\^/gim, '@@94')\n    .replace(/\\\\/gim, '@@92')\n    .replace(/~/gim, '@@126')\n    .replace(/°/gim, ' ') // FIXME! the @@225 code seems to not work (even with the \"Zcharacter table + '@{00B0}';\" directive)\n    .replace(/\\s*<br\\s*\\/*>(\\s|&nbsp;)*/gi, '^')\n    .replace(/(\\s)*&nbsp;(\\s)*/gi, ' ') // maybe: [unicode 160] ?\n    .replace(/(\"|“|”)/gim, '~')\n    .replace(/’/gim, '\\'')\n    .trim()\n}\n\nexport const informDefaultSettings = {\n  lang: 'fr',\n  encoding: 'utf8',\n  clsPattern: '--', // used in v3 as separator (because the lack of clear screen function)\n  disablePauseOnActions: false,\n  disablePauseOnSimpleSequence: false,\n  disablePauseOnGameOver: false,\n  disableClearScreenOnChoice: false,\n  preferSeparatorThanCls: false\n}\n\nexport const DEFAULT_STRINGS_FR = {\n  HEADER: 'Cette histoire a été exportée avec Moiki Exporter.^La version originelle est accessible ici :',\n  MOIKI_PRESENTS: 'Moiki présente :',\n  A_STORY_BY: 'Une histoire de',\n  COLON: ' :',\n  CMD_HELP: 'AIDE',\n  CMD_UNDO: 'RETOUR',\n  CMD_REDO: 'REFAIRE',\n  CMD_LIST: 'LISTE',\n  CMD_SHOW: 'REVOIR',\n  CMD_EXIT: 'QUITTER',\n  CMD_YES: 'oui',\n  CMD_YES_SHORT: 'o',\n  CMD_NO: 'non',\n  CMD_NO_SHORT: 'n',\n  NOCHOICE_MATCH: 'Cette saisie ne correspond à aucun choix !',\n  LIST_OF_COMMANDS: 'Liste des commandes',\n  //BACK_TO_PREVIOUS: 'Retourner au choix précédent',\n  RESTART_GAME: 'Recommencer depuis le début',\n  LIST_OBJECTS: 'Lister les objets récupérés',\n  RESHOW_TEXT: 'Afficher le texte de la dernière séquence',\n  QUIT: 'Quitter',\n  BYE_BYE: 'Bye-bye !',\n  CONFIRM_RESTART: 'Recommencer depuis le début ?',\n  INVENTORY_LIST: `Liste des objets de l'inventaire :`,\n  INVENTORY_EMPTY: 'Votre inventaire est vide !',\n  OBJECT_WON: 'Objet récupéré : ',\n  OBJECT_LOST: 'Objet perdu : ',\n  COUNTER_SET: ' vaut maintenant : ',\n  COUNTER_ADD: ' augmente de ',\n  COUNTER_SUB: ' diminue de ',\n  WIN_GAME: 'Gagné !',\n  LOSE_GAME: 'Perdu !',\n  COMMAND_UNKNOWN_LEFT: 'Cette commande est inconnue ! Tapez ~',\n  COMMAND_UNKNOWN_RIGHT: '~ pour une liste des commandes disponibles.',\n  DEFAULT_CONFIRM_MSG: `Etes-vous sûr de vouloir faire cette action ?`,\n  AND: 'et',\n  OR: 'ou',\n  PLEASE_ANSWER: `Veuillez répondre par `,\n  ANOTHER_GAME: `Lancer une autre partie ?`\n}\n\nexport const DEFAULT_STRINGS_EN = {\n  HEADER: 'This story was exported with Moiki Exporter.^The original version is avalaible here:',\n  MOIKI_PRESENTS: 'Moiki presents :',\n  A_STORY_BY: 'A story by',\n  COLON: ':',\n  CMD_HELP: 'HELP',\n  CMD_UNDO: 'UNDO',\n  CMD_REDO: 'REDO',\n  CMD_LIST: 'LIST',\n  CMD_SHOW: 'SHOW',\n  CMD_EXIT: 'EXIT',\n  CMD_YES: 'yes',\n  CMD_YES_SHORT: 'y',\n  CMD_NO: 'no',\n  CMD_NO_SHORT: 'n',\n  NOCHOICE_MATCH: 'This entry does not correspond to any choice!',\n  LIST_OF_COMMANDS: 'List of commands',\n  //BACK_TO_PREVIOUS: 'Back to previous choice',\n  RESTART_GAME: 'Restart the game',\n  LIST_OBJECTS: 'List of items won',\n  RESHOW_TEXT: 'Show the text of the last sequence',\n  QUIT: 'Quit the game',\n  BYE_BYE: 'Bye bye!',\n  CONFIRM_RESTART: 'Restart from the beginning?',\n  INVENTORY_LIST: `List of items in inventory:`,\n  INVENTORY_EMPTY: 'Inventory is empty!',\n  OBJECT_WON: 'Item won : ',\n  OBJECT_LOST: 'Item lost : ',\n  COUNTER_SET: ' is now: ',\n  COUNTER_ADD: ' increases by ',\n  COUNTER_SUB: ' decreases by ',\n  WIN_GAME: 'Won!',\n  LOSE_GAME: 'Lost!',\n  COMMAND_UNKNOWN_LEFT: 'This command is unknown! Type ~',\n  COMMAND_UNKNOWN_RIGHT: '~ for a list of available commands.',\n  DEFAULT_CONFIRM_MSG: `Are you sure you want to take this action?`,\n  AND: 'and',\n  OR: 'or',\n  PLEASE_ANSWER: `Please answer `,\n  ANOTHER_GAME: `Start another game?`\n}\n\nexport const stringsForItems = ['INVENTORY_EMPTY', 'INVENTORY_LIST', 'CMD_LIST', 'LIST_OBJECTS', 'OBJECT_WON', 'OBJECT_LOST']","import { convertToInform6 } from './inform6'\nimport * as inform6Utils from './inform6-utils'\n\nconst convertToInform = (story, format, options) => {\n  if (format === 'inform6') {\n    return convertToInform6(story, options)\n  }\n  throw new Error('This format is unvailable!')\n}\n\nexport {\n  inform6Utils,\n  convertToInform\n}","/**\nThis export will not use any extra library, just Inform (that means, there is no parser).\n\nTODO: \n* add undo feature\n*/\n\nimport kebabCase from 'lodash.kebabcase'\nimport { getHeader, getAuthor } from '../utils'\nimport * as informUtils from './inform6-utils'\n\nexport const convertToInform6 = (story, opts={}) => {\n  const { _id, meta, firstSequence, sequences, assets, counters } = story\n  const { convertId, cleanContent } = informUtils\n  const settings = {...informUtils.informDefaultSettings, ...opts}\n  const STRINGS = {...(settings.lang === 'fr' ? informUtils.DEFAULT_STRINGS_FR : informUtils.DEFAULT_STRINGS_EN), ...(settings.strings || {})}\n\n  const writeStyle = (style, tabs=1) => `#IfV5; style ${style}; #EndIf;\\n${'  '.repeat(tabs)}`\n  const bold = (tabs) => writeStyle('bold', tabs)\n  //const reverse = (tabs) => writeStyle('reverse', tabs)\n  const underline = (tabs) => writeStyle('underline', tabs)\n  const roman = (tabs) => writeStyle('roman', tabs)\n\n  const objectVariables = {}\n  for (const [idx, asset] of assets.entries()) {\n    objectVariables[asset.id] = {\n      identifier: '_' + convertId(kebabCase(asset.label), '') + '_' + (idx + 1),\n      ...asset\n    }\n  }\n  const objectVarsAsArray = Object.entries(objectVariables).map(([_, data]) => data)\n\n  const counterVariables = {}\n  for (const [idx, counter] of counters.entries()) {\n    counterVariables[counter.id] = {\n      identifier: '_' + convertId(kebabCase(counter.name), '') + '_' + (idx + 1),\n      value: counter.defaultValue || 0,\n      ...counter\n    }\n  }\n  const counterVarsAsArray = Object.entries(counterVariables).map(([_, data]) => data)\n\n  const extractPassageFromConditions = (conditions) => {\n    const passages = []\n    if (conditions && conditions.length > 0) {\n      for (let c of conditions) {\n        const {kind, query: {params}} = c\n        if (kind === 'passage') {\n          const [{target}] = params\n          passages.push(target)\n        } else if (kind === 'multiple') {\n          for (let p of params) {\n            const {kind, target} = p\n            if (kind === 'passage') {\n              passages.push(target)\n            }\n          }\n        }\n      }\n    }\n    return passages\n  }\n\n  const sequenceUsedInConditions = []\n  for (let sequence of sequences) {\n    if (sequence.choices && sequence.choices.length > 0) {\n      for (let ch of sequence.choices) {\n        sequenceUsedInConditions.push(...extractPassageFromConditions(ch.conditions))\n        if (ch.showCondition && ch.showCondition.kind) {\n          sequenceUsedInConditions.push(...extractPassageFromConditions([ch.showCondition]))\n        }\n      }\n    } else {\n      sequenceUsedInConditions.push(...extractPassageFromConditions(sequence.conditions))\n    }\n  }\n  const passageVarsAsArray = [...(new Set(sequenceUsedInConditions))].map(x => convertId(x))\n  \n\n  const convertObjectCondition = (condition, target) => {\n    console.log(condition, target)\n    switch (condition) {\n      case 'with': return `hasItem(${objectVariables[target].identifier})`\n      case 'without': return `~~hasItem(${objectVariables[target].identifier})`\n      default: console.warn('This type of object condition is unknown:', condition)\n    }\n    return null\n  }\n\n  const convertCounterCondition = (condition, target, value) => {\n    if (isNaN(value) || typeof value !== 'number') {\n      console.warn('The value of this counter condition is invalid:', value)\n      return null\n    }\n    switch (condition) {\n      case '=': return `${counterVariables[target].identifier} == ${value}`\n      case '!=': return `${counterVariables[target].identifier} ~= ${value}`\n      case '<': case '<=': case '>': case '>=': {\n        return `${counterVariables[target].identifier} ${condition} ${value}`\n      }\n      default: console.warn('This type of counter condition is unknown:', condition)\n    }\n    return null\n  }\n\n  const convertPassageCondition = (condition, target) => {\n    switch (condition) {\n      case 'by': return `userPassages-->PSG_${convertId(target)} == 1`\n      case 'not-by': return `userPassages-->PSG_${convertId(target)} == 0`\n      default: console.warn('This type of passage condition is unknown:', condition)\n    }\n    return null\n  }\n\n  const convertMultipleCondition = (allConditions) => {\n    const res = []\n    for (let c of allConditions) {\n      const {kind, condition, target, value} = c\n      switch (kind) {\n        case 'object': res.push(convertObjectCondition(condition, target)); break\n        case 'counter': res.push(convertCounterCondition(condition, target, value)); break\n        case 'passage': res.push(convertPassageCondition(condition, target)); break\n        default: {\n          console.warn('This type of multiple condition is unknown:', kind)\n        }\n      }\n    }\n    return res.filter(x => x !== null).map(x => `(${x})`)\n  }\n\n  const convertShowCondition = (showCondition) => {\n    const {kind, query: {operator, params}} = showCondition\n    const [{target, condition, value}] = params\n    switch (kind) {\n      case 'object': return convertObjectCondition(condition, target)\n      case 'counter': return convertCounterCondition(condition, target, value)\n      case 'passage': return convertPassageCondition(condition, target)\n      case 'multiple': {\n        const multiCond = convertMultipleCondition(params)\n        const joiner = operator === 'and' ? ' && ' : ' || '\n        return multiCond ? multiCond.join(joiner) : null\n      }\n      default: {\n        console.warn('This kind of condition is unknown:', kind)\n      }\n    }\n  }\n\n  const convertConditions = (conditions) => {\n    const listConditions = []\n    for (let c of conditions) {\n      const {kind, next, query: {operator, params}} = c\n      const [{target, condition, value}] = params\n      switch (kind) {\n        case 'object': {\n          const objCondition = convertObjectCondition(condition, target)\n          objCondition && listConditions.push(`if (${objCondition}) return ${convertId(next)};`)\n          break\n        }\n        case 'counter': {\n          const counterCond = convertCounterCondition(condition, target, value)\n          counterCond && listConditions.push(`if (${counterCond}) return ${convertId(next)};`)\n          break\n        }\n        case 'passage': {\n          const psgCond = convertPassageCondition(condition, target)\n          psgCond && listConditions.push(`if (${psgCond}) return ${convertId(next)};`)\n          break\n        }\n        case 'multiple': {\n          const multiCond = convertMultipleCondition(params)\n          const joiner = operator === 'and' ? ' && ' : ' || '\n          multiCond && listConditions.push(`if (${multiCond.join(joiner)}) return ${convertId(next)};`)\n          break\n        }\n        default: {\n          console.warn('This kind of condition is unknown:', kind)\n        }\n      }\n    }\n    return listConditions\n  }\n\n  const convertActions = (actions) => {\n    const listActions = []\n    for (let act of actions) {\n      const {kind, params: {target, modifier, value}} = act\n      switch (kind) {\n        // modifier = toggle, add, sub\n        case 'object': listActions.push(`${modifier}Item(${objectVariables[target].identifier});`); break\n        // modifier = set, add, sub\n        case 'counter': listActions.push(`${modifier}Counter(${counterVariables[target].identifier}, ${value});`); break\n        default: {\n          console.warn('This kind of action is unknown:', kind)\n        }\n      }\n    }\n    return listActions\n  }\n\n  const getChoiceLinkValue = (choice) => {\n    if (choice.actions && choice.actions.length > 0) {\n      return [\n        ...convertActions(choice.actions),\n        `return ${convertId(choice.next)};`\n      ]\n    } else if (choice.conditions && choice.conditions.length > 0) {\n      return [\n        ...convertConditions(choice.conditions),\n        `return ${convertId(choice.next)};`\n      ]\n    } else {\n      return [ \n        `return ${convertId(choice.next)};`\n      ]\n    }\n  }\n\n  const getNodeDescription = (sequence) => {\n    let statements = null\n    const listVars = []\n    const text = cleanContent(sequence.content)\n    if (sequence.next && (!sequence.choices || sequence.choices.length === 0)) {\n      // simple sequence\n      if (sequence.actions && sequence.actions.length > 0) {\n        statements = [\n          `print \"${text}^^\";`,\n          ...convertActions(sequence.actions),\n          `return ${convertId(sequence.next)};`\n        ]\n      } else if (sequence.conditions && sequence.conditions.length > 0) {\n        statements = [\n          `print \"${text}\";`,\n          !settings.disablePauseOnSimpleSequence && `wait();`,\n          ...convertConditions(sequence.conditions),\n          `return ${convertId(sequence.next)};`\n        ]\n      } else {\n        statements = [\n          `print \"${text}\";`,\n          !settings.disablePauseOnSimpleSequence && `wait();`,\n          `return ${convertId(sequence.next)};`\n        ]\n      }\n    } else if (sequence.choices && sequence.choices.length > 0) {\n      // choice sequence\n      const choicesDescription = []\n      const choicesLinks = []\n      let mapLinks = []\n      let choiceIndex = 0\n      const hasShowConditions = sequence.choices.filter(c => c.showCondition && c.showCondition.kind).length > 0\n      if (hasShowConditions) {\n        listVars.push('choice', 'numVisibleChoices')\n        for (let choice of sequence.choices) {\n          const choiceContent = cleanContent(choice.content)\n          console.log(choiceContent)\n          const showCond = choice.showCondition && choice.showCondition.kind ? convertShowCondition(choice.showCondition) : false\n          if (showCond) {\n            choicesDescription.push(\n              `if (${showCond}) {`,\n              `  numVisibleChoices = numVisibleChoices + 1;`,\n              `  userChoices-->${(choiceIndex + 1)} = numVisibleChoices;`,\n              `  print \"- (\", numVisibleChoices, \"). ${choiceContent}^\";`,\n              `}`\n            )\n          } else {\n            choicesDescription.push(\n              `numVisibleChoices = numVisibleChoices + 1;`,\n              `userChoices-->${(choiceIndex + 1)} = numVisibleChoices;`,\n              `print \"- (\", numVisibleChoices, \"). ${choiceContent}^\";`\n            )\n          } \n          choicesLinks.push(getChoiceLinkValue(choice))\n          ++choiceIndex\n        }\n        mapLinks = choicesLinks.map((link, i) => `if (choice == userChoices-->${(i + 1)}) {\\n    ${link.join('\\n    ')}\\n  }`)\n      } else {\n        listVars.push('choice')\n        for (let choice of sequence.choices) {\n          const choiceContent = cleanContent(choice.content)\n          choicesDescription.push(`print \"- ${(choiceIndex + 1)}. ${choiceContent}^\";`)\n          choicesLinks.push(getChoiceLinkValue(choice))\n          ++choiceIndex\n        }\n        mapLinks = choicesLinks.map((link, i) => `if (choice == ${ i + 1 }) {\\n    ${link.join('\\n    ')}\\n  }`)\n      }\n      statements = [\n        `numVisibleChoices = 0;`,\n        `print \"${text}^^\";`,\n        ...choicesDescription,\n        `choice = getInputChoice(numVisibleChoices);`,\n        ...mapLinks\n      ]\n    } else {\n      // final sequence\n      statements = [\n        `print \"${text}^\";`,\n        !settings.disablePauseOnGameOver && `wait();`,\n        `gameOver = ${ sequence.isHappyEnd ? '1' : '2'};`,\n        `return nothing;`\n      ]\n    }\n    const seqId = convertId(sequence.id)\n    if (passageVarsAsArray.includes(seqId)) {\n      statements = [`userPassages-->PSG_${seqId} = 1;`, ...statements]\n    }\n    \n    return {\n      statements: statements.filter(s => !!s).join('\\n  '),\n      vars: listVars\n    }\n  }\n\n  const onAfterChoice = settings.preferSeparatorThanCls ? 'print (string) CLS_PATTERN, \"^\";' : 'cls();'\n\n  const moikiInformLibrary = `! This file contains the necessary core for the Moiki export to Inform6\n! kaelhem (c) 2020\n! kaelhem at gmail com\n\n\n! Inform settings\n! -------------------------------------------\n\nGlobal location = DefaultRoomForStatusBar; ! Must be the first global to show location name\nGlobal status_field_1 = 0; ! Must be the second global to show score or hours\nGlobal status_field_2 = 0; ! Must be the third global to show turns or minutes\n\n! Variables for game management\n! -------------------------------------------\n! Array path --> 10; ! allow 10 undo moves, but it's not implemented yet...\nGlobal markForRedo = 0; ! used to restart game from beginning\nGlobal markForShow = 0; ! used to re-display sequence text\nGlobal gameOver = 0;\n\n#IfV3;\n  Constant ARRAY_LEN_OFFSET = 2;\n#IfNot;\n  Constant ARRAY_LEN_OFFSET = 3;\n#EndIf;\n\n! Choices management (used for visibility conditions of choices)\n! -------------------------------------------\n\nConstant MAX_CHOICES = 6;\nArray userChoices --> (ARRAY_LEN_OFFSET + MAX_CHOICES);\n\n[ clearChoices i;\n  for (i=1: i<=MAX_CHOICES: i++) {\n    userChoices-->i = 0;\n  }\n  return;\n];\n\n${ objectVarsAsArray.length > 0 ? (\n`! Items management\n! -------------------------------------------\n\nArray userItems --> (ARRAY_LEN_OFFSET + COUNT_TOTAL_ITEMS);\n\n[ clearItems i;\n  for (i=1: i<=COUNT_TOTAL_ITEMS: i++) {\n    userItems-->i = 0;\n  }\n  return;\n];\n\n[ addItem index;\n  if (userItems-->index == 0) {\n    toggleItem(index);\n  }\n  return;\n];\n\n[ subItem index;\n  if (userItems-->index == 1) {\n    toggleItem(index);\n  }\n  return;\n];\n\n[ hasItem index;\n  return userItems-->index == 1;\n];\n\n[ toggleItem index;\n  ${ bold() }if (userItems-->index == 0) {\n    userItems-->index = 1;\n    ++status_field_1;\n    print (string) STR_OBJECT_WON;\n  } else {\n    userItems-->index = 0;\n    --status_field_1;\n    print (string) STR_OBJECT_LOST;\n  }\n  print (string) getItemDescription(index);\n  ${ roman() }${ !settings.disablePauseOnActions ? 'wait();\\n  ' : '' }return;\n];\n\n[ countItems i count;\n  count = 0;\n  for (i=1: i<=COUNT_TOTAL_ITEMS: i++) {\n    if (userItems-->i == 1) ++count;\n  }\n  return count;\n];\n`) : ''}\n\n${ counterVarsAsArray.length > 0 ? (\n`! Counters management\n! -------------------------------------------\n\nArray userCounters --> (ARRAY_LEN_OFFSET + COUNT_TOTAL_COUNTERS);\n\n[ clearCounters i;\n  for (i=1: i<=COUNT_TOTAL_COUNTERS: i++) {\n    userCounters-->i = defaultCounterValue(i);\n  }\n  return;\n];\n\n[ setCounter index value;\n  userCounters-->index = value;\n  if (isCounterGauge(index)) {\n    ${ bold() }print (string) getCounterName(index), (string) STR_COUNTER_SET, value;\n    ${ roman() }${ !settings.disablePauseOnActions ? 'wait();\\n  ' : '' }\n  }\n  return;\n];\n\n[ addCounter index value;\n  userCounters-->index = userCounters-->index + value;\n  if (isCounterGauge(index)) {\n    ${ bold() }print (string) getCounterName(index), (string) STR_COUNTER_ADD, value, \" \", (string) STR_AND, (string) STR_COUNTER_SET, userCounters-->index;\n    ${ roman() }${ !settings.disablePauseOnActions ? 'wait();\\n  ' : '' }\n  }\n  return;\n];\n\n[ subCounter index value;\n  userCounters-->index = userCounters-->index - value;\n  if (isCounterGauge(index)) {\n    ${ bold() }print (string) getCounterName(index), (string) STR_COUNTER_SUB, value, \" \", (string) STR_AND, (string) STR_COUNTER_SET, userCounters-->index;\n    ${ roman() }${ !settings.disablePauseOnActions ? 'wait();\\n  ' : '' }\n  }\n  return;\n];\n`) : ''}\n\n${ passageVarsAsArray.length > 0 ? (\n`! Passages management (for conditions only)\n! -------------------------------------------\n\nArray userPassages --> (ARRAY_LEN_OFFSET + COUNT_TOTAL_PASSAGES);\n\n[ clearPassages i;\n  for (i=1: i<=COUNT_TOTAL_PASSAGES: i++) {\n    userPassages-->i = 0;\n  }\n  return;\n];\n`) : ''}\n\n! Manage user inputs\n! -------------------------------------------\n\n! fix: in z-code v3, input buffers are not formatted the same way...\n#IfV3;\n  Constant arrayStartIndex 1;\n  [ length arr len;\n    len = 0;\n    while (arr->(len+1) ~= 0) ++len;\n    return len;\n  ];\n#Ifnot;\n  Constant arrayStartIndex 2;\n  [ length arr;\n    return arr->1;\n  ];\n#EndIf;\n\n! read user inputs\n[ KeyLine buffer;\n  buffer->0 = 10;\n  read buffer 0;\n  return buffer;\n];\n\n! convert a string into array\n[ toArray str arr;\n  @output_stream 3 arr;\n  @print_paddr str;\n  @output_stream -3;\n  return arr;\n];\n\n! take a char and return the same in lower case\n[ toLowerCase c;\n  if (c >= 'A' && c <= 'Z') return c + 32; else return c;\n];\n\n! return true if the given command as string match the current input buffer\n[isCommand cmd aCmd i;\n  aCmd = toArray(cmd);\n  if (aCmd-->0 == length(key)) {\n    for (i=0: i<aCmd-->0: i++) {\n      if (key->(arrayStartIndex+i) ~= toLowerCase(aCmd->(2+i))) rfalse;\n    }\n    rtrue;\n  }\n  rfalse;\n];\n\n! store user input\nArray key -> 13;\n\n! read user choices / menu commands\n[ getInputChoice numChoices len chNum commandUnknown done;\n  done = false;\n  do {\n    commandUnknown = false;\n    do {\n      print \"> \";\n    } until(KeyLine(key)-->0);\n    len = length(key);\n    if (len == 1) {\n      chNum = key->arrayStartIndex - 48;\n      if (chNum > 0 && chNum <= numChoices) {\n        ${ !settings.disableClearScreenOnChoice ? '' + onAfterChoice + '\\n        ' : '' }done = true;\n      } else if (chNum > 0 && chNum <= 10) {\n        print (string) STR_NOCHOICE_MATCH, \"^\";\n      } else {\n        commandUnknown = true;\n      }\n    } else if (isCommand(STR_CMD_HELP)) {\n      showHelp();\n    } else if (isCommand(STR_CMD_UNDO)) {\n      undo();\n    } else if (isCommand(STR_CMD_REDO)) {\n      if (redo()) return 0;\n    } else if (isCommand(STR_CMD_EXIT)) {\n      exit();\n    } else if (isCommand(STR_CMD_SHOW)) {\n      markForShow = 1;\n      return 0;${ objectVarsAsArray.length > 0 ? '\\n    } else if (isCommand(STR_CMD_LIST)) {\\n      inventory();\\n    ' : '' }\n    } else {\n      commandUnknown = true;\n    }\n    if (commandUnknown) {\n      print (string) STR_COMMAND_UNKNOWN_LEFT, (string) STR_CMD_HELP, (string) STR_COMMAND_UNKNOWN_RIGHT, \"^\";\n    }\n  } until(done);\n  return chNum;\n];\n\n[ confirm question ok done;\n  done = false;\n  ok = false;\n  do {\n    do {\n      if (question) {\n        print (string) question;\n      } else {\n        print (string) STR_DEFAULT_CONFIRM_MSG;\n      }\n      print \" (\", (string) STR_CMD_YES, \"/\", (string) STR_CMD_NO, \")^> \";\n    } until(KeyLine(key)-->0);\n    if (isCommand(STR_CMD_YES) || isCommand(STR_CMD_YES_SHORT)) {\n      ok = true;\n      done = true;\n    } else if (isCommand(STR_CMD_NO) || isCommand(STR_CMD_NO_SHORT)) {\n      done = true;\n    }\n    if (~~done) {\n      print (string) STR_PLEASE_ANSWER, (string) STR_CMD_YES, \" \", (string) STR_OR, \" \", (string) STR_CMD_NO,\".^\";\n    }\n  } until(done);\n  return ok;\n];\n\n[ cls;\n  #IfV3;\n    ! in v3 it seems there is no way to clear the screen...\n    print (string) CLS_PATTERN, \"^\";\n  #Ifnot;\n    @erase_window -1; ! this opcode is not available in V3\n  #EndIf;\n  rtrue;\n];\n\n[ wait x;\n  #IfV3;\n    read key 0;\n  #Ifnot;\n    @read_char 1 x; ! this opcode is not available in V3\n    print \"^\";\n  #EndIf;\n];\n\n\n! Menu\n! -------------------------------------------\n\n[ showHelp;\n  ${ underline() }print (string) STR_LIST_OF_COMMANDS, \"^\";\n  ${ roman() }! print \"  - \", (string) STR_CMD_UNDO, (string) STR_COLON, \" \", (string) STR_BACK_TO_PREVIOUS, \"^\";\n  print \"  - \", (string) STR_CMD_REDO, (string) STR_COLON, \" \", (string) STR_RESTART_GAME, \"^\";\n  print \"  - \", (string) STR_CMD_SHOW, (string) STR_COLON, \" \", (string) STR_RESHOW_TEXT, \"^\";\n  print \"  - \", (string) STR_CMD_EXIT, (string) STR_COLON, \" \", (string) STR_QUIT, \"^\";\n  ${ objectVarsAsArray.length > 0 ? 'print \"  - \", (string) STR_CMD_LIST, (string) STR_COLON, \" \", (string) STR_LIST_OBJECTS, \"^\";\\n  ' : '' }rtrue;\n];\n\n[ exit;\n  print (string) STR_BYE_BYE, \"^\";\n  @quit;\n];\n\n[ undo;\n  print \"Undo: not implemented yet !^\";\n  rtrue;\n];\n\n[ redo;\n  if (confirm(STR_CONFIRM_RESTART)) {\n    markForRedo = 1;\n    rtrue;\n  }\n  rfalse;\n];\n${ objectVarsAsArray.length > 0 ? (`\n[ inventory i;\n  if (countItems() == 0) {\n    print (string) STR_INVENTORY_EMPTY, \"^\";\n  } else {\n    ${ underline(2) }print (string) STR_INVENTORY_LIST, \"^\";\n    ${ roman(2) }for (i=1: i<=COUNT_TOTAL_ITEMS: i++) {\n      if (hasItem(i)) print \"* \", (string) getItemDescription(i), \"^\";\n    }\n  }\n  rtrue;\n];\n`) : '' }\n\n! Presentation\n! -------------------------------------------\n\n[ startScreen;\n  ${ underline() }print (string) STR_HEADER, \" \", (string) STORY_URL, \"^^\";\n  ${ roman() }print (string) STR_MOIKI_PRESENTS, \"^\";\n  ${ bold() }print (string) STORY_TITLE, \"^^\";\n  ${ roman() }print (string) STR_A_STORY_BY, \" \", (string) STORY_AUTHOR, \"^^\", (string) STORY_DESCRIPTION, \"^\";\n  rtrue;\n];\n\n\n! Game loop\n! -------------------------------------------\n[ mainLoop firstSequence next res;\n  next = firstSequence;\n  do {\n    ++status_field_2; ! increase turn counter\n    res = next();\n    if (markForShow == 1) {\n      markForShow = 0;\n      res = next;\n    }\n    if (markForRedo == 1) {\n      res = false;\n    }\n    next = res;\n    print \"^\";\n  } until(~~next);\n  if (gameOver > 0) {\n    ${ bold(2) }if (gameOver == 1) {\n      print (string) STR_WIN_GAME, \"^^\";\n    } else if (gameOver == 2) {\n      print (string) STR_LOSE_GAME, \"^^\";\n    }\n    ${ roman(2) }gameOver = 0;\n  }\n];\n\n[ startGame firstSequence replay;\n  startScreen();\n  wait();\n  do {\n    cls();\n    replay = false;\n    location = DefaultRoomForStatusBar; ! reset location (avoid compiler warning)\n    status_field_1 = 0; ! reset score\n    status_field_2 = 0; ! reset turns\n    ${ objectVarsAsArray.length > 0 ? `clearItems();` : '' }\n    ${ counterVarsAsArray.length > 0 ? `clearCounters();` : '' }\n    ${ passageVarsAsArray.length > 0 ? `clearPassages();` : '' }\n    mainLoop(firstSequence);\n    if (markForRedo == 1) {\n      markForRedo = 0;\n      replay = true;\n    } else {\n      if (confirm(STR_ANOTHER_GAME)) {\n        replay = true;\n      } else {\n        exit();\n      }\n    }\n  } until(~~replay);\n];\n`\n  const encoding = settings.encoding === 'utf8' ? '!% -Cu\\n' : ''\n  let moikiInformStory = `${encoding}!% -~S\n!% $OMIT_UNUSED_ROUTINES=1\n\n! ${getHeader(_id).split('\\n').join('\\n! ')}\n\n! author: ${getAuthor(meta)}\n! title: ${meta.name}\n\nObject DefaultRoomForStatusBar \"${meta.name}\"; ! used to force name in status line\n\n! Constants\n! -------------------------------------------\nConstant STORY_TITLE = \"${cleanContent(meta.name)}\";\nConstant STORY_DESCRIPTION = \"${cleanContent(meta.description)}\";\nConstant STORY_AUTHOR = \"${cleanContent(getAuthor(meta))}\";\nConstant STORY_URL = \"https://moiki.fr/story/${_id}\";\n\n! Strings\n${Object.entries(STRINGS).filter(([key, value]) => {\n  return !(informUtils.stringsForItems.find(s => s === key) && objectVarsAsArray.length === 0)\n}).map(([key, value]) => `Constant STR_${key} = \"${value}\";`).join('\\n')}\n! Config\nConstant CLS_PATTERN = \"${settings.clsPattern.slice(0, 40).repeat(40).slice(0, 40)}\";\n\n${ objectVarsAsArray.length > 0 ? (`\n! Defines objects / heroes\n!-------------------------------------------\nConstant COUNT_TOTAL_ITEMS = ${objectVarsAsArray.length};\n\n${true && objectVarsAsArray.map((v, i) => 'Constant ' + v.identifier + ' = ' + (i + 1) + ';').join('\\n')}\n\n[ getItemDescription index;\n  switch (index) {\n    ${true && objectVarsAsArray.map(v => v.identifier + ': return \"' + v.label + ' - ~' + v.desc + '~\";').join('\\n    ')}\n    default: return \"\";\n  }\n];\n\n`) : ''}\n\n${ counterVarsAsArray.length > 0 ? (`\n! Defines counters\n!-------------------------------------------\nConstant COUNT_TOTAL_COUNTERS = ${counterVarsAsArray.length};\n\n${true && counterVarsAsArray.map((v, i) => 'Constant ' + v.identifier + ' = ' + (i + 1) + ';').join('\\n')}\n\n[ getCounterName index;\n  switch (index) {\n    ${true && counterVarsAsArray.map(v => v.identifier + ': return \"' + v.name + '\";').join('\\n    ')}\n    default: return \"Undefined counter\";\n  }\n];\n\n[ defaultCounterValue index;\n  switch (index) {\n    ${true && counterVarsAsArray.map(v => v.identifier + ': return ' + (v.defaultValue || 0) + ';').join('\\n    ')}\n    default: return 0;\n  }\n];\n\n[ isCounterGauge index;\n  switch (index) {\n    ${true && counterVarsAsArray.filter(v => v.gauge).map(v => v.identifier + ': rtrue;').join('\\n    ')}\n    default: return false;\n  }\n];\n\n`) : ''}\n\n${ passageVarsAsArray.length > 0 ? (`\n! Defines passages (used only for conditions)\n!-------------------------------------------\nConstant COUNT_TOTAL_PASSAGES = ${passageVarsAsArray.length};\n\n${true && passageVarsAsArray.map((v, i) => 'Constant PSG_' + v + ' = ' + (i + 1) + ';').join('\\n')}\n\n`) : ''}\n\n! Include MoikInform library\n! ------------------------------------------\nInclude \"moikinform\";\n\n\n! App entry point\n! ------------------------------------------\n[ Main;\n  startGame(${convertId(firstSequence)});\n];\n\n\n! Story sequences\n! ------------------------------------------\n`\n  for (let sequence of sequences) {\n    const { statements, vars } = getNodeDescription(sequence)\n    moikiInformStory += `[ ${convertId(sequence.id)}${vars && vars.length > 0 ? ' ' + vars.join(' ') : ''};\\n  ${statements}\\n];\\n\\n`\n  }\n\n  return [\n    { filename: 'story.inf', data: moikiInformStory },\n    { filename: 'moikinform.h', data: moikiInformLibrary }\n  ]\n}","import * as utils from './utils'\nexport { migrate } from './migration-utils'\n\nexport { convertToInk } from './ink'\nexport { convertToInform, inform6Utils } from './inform'\n//export { convertToTwee } from './twee'\n//export { convertToJdrBot } from './jdr-bot'\n//export { version } from '../package.json'\nexport { utils }\n\nexport const version = 'dev'"],"names":["object","callback","getHeader","storyId","Date","toLocaleDateString","weekday","year","month","day","hour","minute","second","getAuthor","story","author","pseudo","firstname","lastname","vars","cleanTextFn","sequences","firstSequence","tree","addLink","id","to","isBackLink","in","push","allSequencesById","s","choices","length","choice","content","conditions","cond","next","chapters","Object","entries","map","data","index","node","chap","currentId","chain","chainWithActions","actions","params","objectAction","target","kind","chainSum","contentSum","chainObj","replace","trim","actionKind","chainedContent","forEach","seq","migrate","storyVersion","meta","version","fromV1","fromV2","fromCommon","assets","sounds","counters","stats","_id","theme","numView","converted","simplified","_doc","action","condition","modifier","query","c","chAction","chCond","ch","reAsciiWord","reLatin","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsLowerMisc","rsUpperMisc","reOptMod","rsModifier","rsSeq","join","rsEmoji","reApos","RegExp","reComboMark","reUnicodeWord","reHasUnicodeWord","freeSelf","self","root","global","Function","deburrLetter","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","key","undefined","objectToString","prototype","toString","Symbol","symbolProto","symbolToString","value","isObjectLike","call","isSymbol","result","baseToString","word","toLowerCase","string","array","iteratee","accumulator","initAccum","arrayReduce","pattern","guard","test","hasUnicodeWord","match","unicodeWords","asciiWords","words","deburr","convertId","cleanContent","convertToInk","objectVariables","asset","inkVar","kebabCase","label","counterVariables","counter","name","convertCondition","operator","console","warn","convertObjectCondition","isNaN","convertCounterCondition","convertPassageCondition","multiCond","allConditions","res","filter","x","convertMultipleCondition","log","addConditions","defaultNext","newLine","inkConditions","strConditions","lf","convertAction","desc","INDENT","convertObjectAction","gauge","defaultAction","convertCounterAction","addActions","listActions","image","description","defaultValue","sequence","text","prefix","showCondition","choiceContent","informDefaultSettings","lang","encoding","clsPattern","disablePauseOnActions","disablePauseOnSimpleSequence","disablePauseOnGameOver","disableClearScreenOnChoice","preferSeparatorThanCls","DEFAULT_STRINGS_FR","HEADER","MOIKI_PRESENTS","A_STORY_BY","COLON","CMD_HELP","CMD_UNDO","CMD_REDO","CMD_LIST","CMD_SHOW","CMD_EXIT","CMD_YES","CMD_YES_SHORT","CMD_NO","CMD_NO_SHORT","NOCHOICE_MATCH","LIST_OF_COMMANDS","RESTART_GAME","LIST_OBJECTS","RESHOW_TEXT","QUIT","BYE_BYE","CONFIRM_RESTART","INVENTORY_LIST","INVENTORY_EMPTY","OBJECT_WON","OBJECT_LOST","COUNTER_SET","COUNTER_ADD","COUNTER_SUB","WIN_GAME","LOSE_GAME","COMMAND_UNKNOWN_LEFT","COMMAND_UNKNOWN_RIGHT","DEFAULT_CONFIRM_MSG","AND","OR","PLEASE_ANSWER","ANOTHER_GAME","DEFAULT_STRINGS_EN","stringsForItems","convertToInform","format","options","opts","informUtils","settings","STRINGS","strings","writeStyle","style","tabs","repeat","bold","underline","roman","idx","identifier","objectVarsAsArray","counterVarsAsArray","extractPassageFromConditions","passages","p","sequenceUsedInConditions","passageVarsAsArray","Set","convertShowCondition","convertConditions","listConditions","objCondition","counterCond","psgCond","convertActions","act","getChoiceLinkValue","getNodeDescription","statements","listVars","choicesDescription","choicesLinks","mapLinks","choiceIndex","showCond","link","i","isHappyEnd","seqId","includes","onAfterChoice","moikiInformLibrary","moikiInformStory","split","find","slice","v","filename","convertToInform6","Error"],"mappings":"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"}