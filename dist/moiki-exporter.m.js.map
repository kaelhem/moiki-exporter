{"version":3,"file":"moiki-exporter.m.js","sources":["../node_modules/lodash.kebabcase/index.js","../src/utils.js","../src/ink/index.js","../src/inform/index.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/bytesToUuid.js","../node_modules/uuid/dist/esm-browser/v4.js","../src/twee/twee-harlowe.js","../src/twee/twee-sugarcube.js","../src/twee/index.js","../src/jdr-bot/index.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = kebabCase;\n","const getDate = () => {\n  const dateOptions = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  }\n  return new Date().toLocaleDateString('en-US', dateOptions)\n}\n\nexport const getHeader = (storyId) => (\n`This story was created with Moiki, and converted with Moiki-Exporter\nMore info: https://github.com/kaelhem/moiki-exporter\nLaunch it with the Moiki player: https://moiki.fr/story/${storyId}\nExported on ${getDate()}`\n)\n\nexport const getAuthor = (story) => {\n  if (story && story.author) {\n    const { firstname, lastname, pseudo } = story.author\n    return pseudo ? pseudo : firstname + ' ' + lastname\n  }\n  return 'Inconnu'\n}\n\n/*\n  This WTF function allow to chain simple sequences as it was one.\n  It returns an array of sequences with this added attributes :\n    * chain: array of chained sequences (this one included)\n    * chainedContent: an array with either : \n      + cumulated text of the chained sequences (as strings)\n      + object that corresponding to won objects\n      ex.: ['text of several sequences', {pngIcon, desc}, 'text of following sequences']\n\n  /!\\ this method is destructive for the sequences object pass in. You should use a deep copy to keep you data untouched.\n*/\nexport const simplifyStory = ({sequences, firstSequence, assets}, vars, cleanTextFn) => {\n  const tree = {}\n\n  const addLink = (id, to, isBackLink=false) => {\n    if (!tree[id]) {\n      tree[id] = {in: [], to: []}\n    }\n    if (!isBackLink) {\n      tree[id].to.push(to)\n      addLink(to, id, true)\n    } else {\n      tree[id].in.push(to)\n    }\n  }\n\n  const allSequencesById = {}\n\n  for (let s of sequences) {\n    allSequencesById[s.id] = s\n    if (s.choices && s.choices.length > 0) {\n      for (let choice of s.choices) {\n        choice.content = cleanTextFn(choice.content)\n        if (choice.condition && choice.condition.next && choice.condition.params) {\n          addLink(s.id, choice.condition.next)\n        }\n        if (choice.next) {\n          addLink(s.id, choice.next)\n        }\n      }\n    } else {\n      if (s.condition && s.condition.next && s.condition.params) {\n        addLink(s.id, s.condition.next)\n      }\n      if (s.next) {\n        addLink(s.id, s.next)\n      }\n    }\n  }\n  \n  const chapters = [allSequencesById[firstSequence]]\n  const treeArray = Object.entries(tree).map(([index, data]) => ({data, index}))\n  for (let node of treeArray) {\n    if ((node.data.in.length > 1 || (node.data.in.length === 1 && tree[node.data.in[0]].to.length > 1)) && node.index !== firstSequence) {\n      chapters.push(allSequencesById[node.index])\n    }\n  }\n  for (let chap of chapters) {\n    let currentId = chap.id\n    const chain = [allSequencesById[currentId]]\n    while (tree[currentId].to.length === 1) {\n      currentId = tree[currentId].to[0]\n      chain.push(allSequencesById[currentId])\n    }\n    chap.chain = chain\n\n    const chainWithObjects = []\n    for (let node of chain) {\n      chainWithObjects.push(node)\n      if (node.action && node.action.params && typeof node.action.params === 'string') {\n        chainWithObjects.push({objectAction: vars[node.action.params]})\n      }\n    }\n    const chainSum = []\n    let contentSum = ''\n    for (let chainObj of chainWithObjects) {\n      if (chainObj.objectAction) {\n        if (contentSum) {\n          chainSum.push(contentSum.replace(/(\\s)*<br(\\s)*\\/>(\\s)*/gi, '\\u000D\\u000A').trim())\n          contentSum = ''\n        }\n        chainSum.push(chainObj.objectAction)\n      } else {\n        contentSum += cleanTextFn(chainObj.content) + ' '\n      }\n    }\n    if (contentSum) {\n      chainSum.push(contentSum.replace(/(\\s)*<br(\\s)*\\/>(\\s)*/gi, '\\u000D\\u000A').trim())\n    }\n    chap.chainedContent = chainSum\n  }\n  chapters.forEach(seq => {\n    seq.chain = seq.chain.map(({chain, chainedContent, ...rest}) => ({...rest}))\n  })\n  return chapters\n}","import kebabCase from 'lodash.kebabcase'\nimport { getHeader, getAuthor } from '../utils'\n\nconst convertId = id => id.replace(/-/gi, '_')\nconst cleanContent = content => {\n  return content\n    .replace(/(<(strong|b)>\\s)/gi, ' <b>')\n    .replace(/(\\s<\\/(strong|b)>)/gi, '</b> ')\n    .replace(/(<em>\\s)/gi, ' <em>')\n    .replace(/(\\s<\\/em>)/gi, '</em> ')\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/(<([/p]+)>)/gi, '')\n    .replace(/(<([/]*)(span)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/&nbsp;/gi, ' ')\n    .replace(/(\\s)+/gi, ' ')\n    .trim()\n}\n\nconst addCondition = (data, variables) => (\n`{ ${variables[data.condition.params].inkVar}:\n  -> ${convertId(data.condition.next)}\n- else:\n  -> ${convertId(data.next)}\n}\n`)\n\nconst addAction = (data, variables, prefix='') => {\n  const {inkVar, desc} = variables[data.action.params]\n  return (`\n${prefix}~ ${inkVar} = !${inkVar}\n${prefix}{ ${inkVar}:\n${prefix}  <h4><em>Objet récupéré</em> : ${desc}</h4>\n${prefix}- else:\n${prefix}  <h4><em>Objet perdu</em> : ${desc}</h4>\n${prefix}}\n`)}\n\nexport const convertToInk = (story) => {\n  const { _id, meta, firstSequence, sequences, assets } = story\n\n  let variables = {}\n  for (let asset of assets) {\n    variables[asset.id] = {\n      inkVar: '_' + convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n  \n  let result = `/*\n${getHeader(_id)}\n*/\n\n# author: ${getAuthor(meta)}\n# title: ${meta.name}\n`\n  if (meta.image) {\n    result += `# IMAGE: ${meta.image.replace(/\\//gi, '\\\\/')}\n<em>Crédit photo : <a href=\"${'https://unsplash.com'.replace(/\\//gi, '\\\\/')}\">Unsplash</a></em>\n`\n  }\n  result += '<em>' + meta.description + '</em>\\n<hr/>\\n'\n\n  const varsAsArray = Object.entries(variables).map(([_, data]) => data)\n  for (let variable of varsAsArray) {\n    result += 'VAR ' + variable.inkVar + ' = false\\n'\n  }\n  result += '\\n-> ' + convertId(firstSequence) + '\\n'\n\n  for (let sequence of sequences) {\n    const text = cleanContent(sequence.content)\n    result += '\\n=== ' + convertId(sequence.id) + ' ===\\n'\n    result += text + '\\n'\n    if (sequence.choices && sequence.choices.length > 0) {\n      for (let choice of sequence.choices) {\n        let action = ' '\n        if (choice.action && choice.action.params && typeof choice.action.params === 'string') {\n          action = addAction(choice, variables, '\\t')\n        }\n        let choiceContent = '* [' + cleanContent(choice.content) + ']' + action\n        if (choice.condition && choice.condition.next && choice.condition.params) {\n          result += `${choiceContent} ${addCondition(choice, variables)}`\n        } else {\n          result += choiceContent + '-> ' + convertId(choice.next) + '\\n'\n        }\n      }\n      result += '# CLEAR\\n'\n    } else {\n      if (sequence.action && sequence.action.params && typeof sequence.action.params === 'string') {\n        result += addAction(sequence, variables)\n      }\n      if (sequence.condition && sequence.condition.next && sequence.condition.params) {\n        result += addCondition(sequence, variables)\n      } else if (sequence.next) {\n        result += '-> ' + convertId(sequence.next) + '\\n'\n      } else {\n        result += '-> END\\n'\n      }\n    }\n  }\n  return result\n}","/**\nAll this stuff was made possible with the help of @batteman and the fiction-interactive.fr community.\n*/\n\nimport kebabCase from 'lodash.kebabcase'\nimport { getHeader, getAuthor } from '../utils'\n\nconst convertId = id => id.replace(/-/gi, '_')\nconst cleanContent = (content) => {\n  return content\n    .replace(/(<\\/*(strong|b)>)/gi, '')\n    .replace(/(<\\/*(em)>)/gi, '')\n    .replace(/(<\\/*(h\\d)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/<\\/*p>/gi, '')\n    .replace(/(<\\/*(span)>)/gi, '')\n    .replace(/(\\s)+/gi, ' ')\n    .replace(/\\s*<br\\s*\\/*>(\\s|&nbsp;)*/gi, '^')\n    .replace(/(\\s)*&nbsp;(\\s)*/gi, ' ') // maybe: [unicode 160] ?\n    .replace(/(\\\"|“|”)/gim, '~')\n    .replace(/\\^/gim, '@@94')\n    .trim()\n}\n\nconst directions = ['w', 's', 'e', 'n', 'nw', 'ne', 'sw', 'se']\n\nconst getChoiceGotoFunctionFromIndex = (index) => {\n  if (index >= 0 && index < 10) {\n    return directions[index] + '_to'\n  }\n  throw new Error('Only 8 choices are allowed here...')\n}\n\nconst getChoiceLinkValue = (choice, variables) => {\n  if (choice.action && choice.action.params && typeof choice.action.params === 'string') {\n    return `[; ClearScreen(); ${variables[choice.action.params].identifier}=inverse(${variables[choice.action.params].identifier}); style bold; addOrRemoveObject(${variables[choice.action.params].identifier}); print \"${cleanContent(variables[choice.action.params].desc)}\"; style roman; attend(); PlayerTo(${convertId(choice.next)}); rtrue;]`\n  } else if (choice.condition && choice.condition.next && choice.condition.params) {\n    return `[; ClearScreen(); if (${variables[choice.condition.params].identifier}) PlayerTo(${convertId(choice.condition.next)}); else PlayerTo(${convertId(choice.next)}); rtrue;]`\n  } else {\n    return `[; ClearScreen(); PlayerTo(${convertId(choice.next)}); rtrue;]`\n  }\n}\n\nconst getNodeDescription = (sequence, variables) => {\n  const text = cleanContent(sequence.content)\n  if (sequence.next && (!sequence.choices || sequence.choices.length === 0)) {\n    // simple sequence\n    if (sequence.action && sequence.action.params && typeof sequence.action.params === 'string') {\n      return `[; print \"${text}^^\"; ${variables[sequence.action.params].identifier}=inverse(${variables[sequence.action.params].identifier}); style bold; addOrRemoveObject(${variables[sequence.action.params].identifier}); print \"${cleanContent(variables[sequence.action.params].desc)}\"; style roman; attend(); PlayerTo(${convertId(sequence.next)});];\\n`\n    } else if (sequence.condition && sequence.condition.next && sequence.condition.params) {\n      return `[; print \"${text}\"; if (${variables[sequence.condition.params].identifier}) PlayerTo(${convertId(sequence.condition.next)}); else PlayerTo(${convertId(sequence.next)});];\\n`\n    }\n    return `[; print \"${text}\"; PlayerTo(${convertId(sequence.next)});];\\n`\n  } else if (sequence.choices && sequence.choices.length > 0) {\n    // choice sequence\n    let choicesDescription = ''\n    const choicesLinks = []\n    let choiceIndex = 0\n    for (let choice of sequence.choices) {\n      const choiceContent = cleanContent(choice.content)\n      choicesDescription += '- ' + (choiceIndex + 1) + '. ' + choiceContent + '^'\n      choicesLinks.push({\n        gotoFunction: getChoiceGotoFunctionFromIndex(choiceIndex),\n        gotoValue: getChoiceLinkValue(choice, variables)\n      })\n      ++choiceIndex\n    }\n    return `\"${text}^^${choicesDescription}\",\\n  ${choicesLinks.map(l => `${l.gotoFunction} ${l.gotoValue}`).join(',\\n  ')};`\n  } else {\n    // final sequence\n    return `[; print \"${text}^\"; deadflag=${ sequence.isHappyEnd ? '2' : '1' };];\\n`\n  }\n}\n\nexport const convertToInform = (story) => {\n  const { _id, meta, firstSequence, sequences, assets } = story\n\n  let variables = {}\n  for (let asset of assets) {\n    variables[asset.id] = {\n      identifier: '_' + convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n\n  const varsAsArray = Object.entries(variables).map(([_, data]) => data)\n\n  let result = `!% !-s\n\n! ${getHeader(_id).split('\\n').join('\\n! ')}\n\n! author: ${getAuthor(meta)}\n! title: ${meta.name}\n\nConstant Story \"${meta.name}\";\nConstant Headline \"^${meta.description}^^Une histoire de ${getAuthor(meta)}.^^Cette histoire a été exportée avec Moiki Exporter.^La version originelle est accessible ici : https://moiki.fr/story/${_id}^\";\nRelease 1;\n\nConstant NO_SCORE;\n\nInclude \"parser\";\n\n! Add a prefix to every commands to shortcut the lib. credit: @hlabrande\n[ BeforeParsing pos ;\n  #Ifdef TARGET_ZCODE;\n    pos = parse->5;\n  #Ifnot; ! TARGET_GLULX\n    pos = parse->3;\n  #Endif; ! TARGET_\n  LTI_Insert(pos, 'c');\n  LTI_Insert(pos+1, 'h');\n  LTI_Insert(pos+2, 'o');\n  LTI_Insert(pos+3, 'i');\n  LTI_Insert(pos+4, 'x');\n  LTI_Insert(pos+5, ' ');\n  Tokenise__(buffer, parse);\n];\n\nInclude \"verblib\";\n\n! Wait for player to press a key. credit: @FibreTigre.\n[ attend notNeeded;\n  @read_char 1 notNeeded;\n  rtrue;\n];\n\n[ addOrRemoveObject obj;\n  if (obj) print \"Objet récupéré : \"; else print \"Objet perdu : \";\n  rtrue;\n];\n\n[ inverse obj;\n  if (obj) return false; else return true;\n];\n`\n\nif (varsAsArray.length > 0) {\nresult += `\n! Variables for Objects / Heroes\n!-------------------------------------------\n${varsAsArray.map(v => 'Global ' + (v.identifier + ' = false')).join(';\\n')};\n`\n}\n\nresult += `\n! Start story\n! ------------------------------------------\n\nClass sequence\n  with cant_go [; print \"Choix non reconnu, veuillez recommencer.^\"; <<Look>>; ];\n\n`\n\n  for (let sequence of sequences) {   \n    result += `\nSequence ${convertId(sequence.id)} \"\"\nwith name \"${convertId(sequence.id)}\",\n  description ${getNodeDescription(sequence, variables)}\n`\n}\n\nresult += `\n\n! Routines\n!-----------------------------------\n\n[ Initialise;\n  location = ${convertId(firstSequence)};\n  give player light;\n  introduction();\n  lookmode=2; ! les lieux déjà visités sont décrits à chaque fois\n  return;\n];\n\n[ introduction;\n  style underline;\n  print \"Ce jeu ne se joue qu'en tapant les chiffres de vos choix.^De ce fait, vous ne pourrez ni sauver ni quitter de manière classique.^^\";\n  attend();\n];\n\n[ DeathMessage;\n  switch (deadflag) {\n    1: print \"Fin Tragique !\";\n    2: print \"Fin Heureuse !\";\n  }\n];\n\n\n! Grammar\n!-----------------------------------\n\nInclude \"FrenchG\";\n\n[ ChoixNumberSub ;\n  ${directions.map((d, idx) => (`if (noun == ${idx + 1}) <<Go ${d}_obj>>;`)).join('\\n  ')}\n  print \"Choix non reconnu, veuillez recommencer.^\";\n];\n\nVerb 'choix'\n* number        ->choixNumber;\n`\n  return result\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","import kebabCase from 'lodash.kebabcase'\nimport { v4 as uuidv4 } from 'uuid'\nimport { getHeader, getAuthor } from '../utils'\n\nconst convertId = id => id.replace(/-/gi, '_')\nconst cleanContent = content => (\n  content\n    .replace(/(<(strong|b|h\\d)>\\s)/gi, ' <b>')\n    .replace(/(\\s<\\/(strong|b|h\\d)>)/gi, '</b> ')\n    .replace(/(<em>\\s)/gi, ' <em>')\n    .replace(/(\\s<\\/em>)/gi, '</em> ')\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/(<([/p]+)>)/gi, '')\n    .replace(/(<([/]*)(strong|b|h\\d)>)/gi, \"''\")\n    .replace(/(<([/]*)(em)>)/gi, '//')\n    .replace(/(<([/]*)(span)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/(<br(\\s)*(\\/)*>)/gi, ' ')\n    .replace(/&nbsp;/gi, ' ')\n    .replace(/(\\s)+/gi, ' ')\n    .trim()\n)\n\nconst esc = content => content.replace(/\"/gi, '\\\\\"')\n\nconst addCondition = (data, variables, kind='goto') => (\n`(if: ${variables[data.condition.params].tweeVar})[(${kind}: \"${convertId(data.condition.next)}\")]\n(else:)[(${kind}: \"${convertId(data.next)}\")]\n`)\n\nconst addLink = (data, variables) => {\n  const condition = (data.condition && data.condition.next && data.condition.params) ? data.condition.params : null\n  const actionId = (data.action && data.action.params && typeof data.action.params === 'string') ? data.action.params : null\n  const next = data.next ? convertId(data.next) : null\n  const content = esc(cleanContent(data.content))\n  if (actionId) {\n    const {tweeVar, desc} = variables[actionId]\n    return `(link: \"${content}\")[(set: ${tweeVar} to not ${tweeVar}, $actionText to \"${esc(desc)}\", $actionPassage to \"${next}\", $isObjectWin to ${tweeVar})[(goto: \"Toggle-Object\")]]\\n`\n  } else if (condition) {\n    return `(link: \"${content}\")[${addCondition(data, variables)}]\\n`\n  } else if (next) {\n    return `(link: \"${content}\")[(goto: \"${next}\")]\\n`\n  }\n  return ''\n}\n\nconst addNext = (data, variables) => {\n  const condition = (data.condition && data.condition.next && data.condition.params) ? data.condition.params : null\n  const actionId = (data.action && data.action.params && typeof data.action.params === 'string') ? data.action.params : null\n  const next = data.next ? convertId(data.next) : null\n  if (actionId) {\n    const {tweeVar, desc} = variables[actionId]\n    return `(set: ${tweeVar} to not ${tweeVar}, $actionText to \"${esc(desc)}\", $actionPassage to \"${next}\", $isObjectWin to ${tweeVar})[(display: \"Toggle-Object\")]\\n`\n  } else if (condition) {\n    return `${addCondition(data, variables, 'display')}\\n`\n  } else if (next) {\n    return `(display: \"${next}\")\\n`\n  }\n  return ''\n}\n\nexport const convertToHarlowe = (story) => {\n  const { _id, meta, firstSequence, sequences, assets } = story\n\n  let variables = {}\n  for (let asset of assets) {\n    variables[asset.id] = {\n      tweeVar: '$' + convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n  \n  let result = `<!--\n${getHeader(_id)}\n-->\n\n:: StoryAuthor\n${getAuthor(meta)}\n\n:: StoryTitle\n${meta.name}\n\n:: StorySubtitle\n${meta.description}\n\n:: StoryData\n{\n  \"ifid\": \"${uuidv4()}\",\n  \"format\": \"Harlowe\",\n  \"format-version\": \"3.1.0\",\n  \"start\": \"${convertId(firstSequence)}\",\n  \"zoom\": 1\n}\n\n`\n  const varsAsArray = Object.entries(variables).map(([_, data]) => data)\n  let variablesSetup = '(set: $actionText to false, $actionPassage to false, $isObjectWin to false)\\n'\n  for (let variable of varsAsArray) {\n    variablesSetup += '(set: ' + variable.tweeVar + ' to false)\\n'\n  }\n\n  for (let sequence of sequences) {\n    const text = cleanContent(sequence.content)\n    result += '\\n:: ' + convertId(sequence.id) + '\\n' + text + '\\n'\n    if (sequence.choices && sequence.choices.length > 0) {\n      for (let choice of sequence.choices) {\n        result += addLink(choice, variables)\n      }\n    } else {\n      result += addNext(sequence, variables)\n    }\n    if (sequence.id === firstSequence) {\n      result += variablesSetup\n    }\n  }\n\n  result += `\n:: Toggle-Object\n(if: $isObjectWin)[Objet récupéré : {$actionText}]\n(else:)[Objet perdu : {$actionText}]\n(display: $actionPassage)\n`\n  return result\n}","import kebabCase from 'lodash.kebabcase'\nimport { v4 as uuidv4 } from 'uuid'\nimport { getHeader, getAuthor } from '../utils'\n\nconst convertId = id => id.replace(/-/gi, '_')\nconst cleanContent = content => (\n  content\n    .replace(/(<(strong|b|h\\d)>\\s)/gi, ' <b>')\n    .replace(/(\\s<\\/(strong|b|h\\d)>)/gi, '</b> ')\n    .replace(/(<em>\\s)/gi, ' <em>')\n    .replace(/(\\s<\\/em>)/gi, '</em> ')\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/(<([/p]+)>)/gi, '')\n    .replace(/(<([/]*)(strong|b|h\\d)>)/gi, \"''\")\n    .replace(/(<([/]*)(em)>)/gi, '//')\n    .replace(/(<([/]*)(span)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/(<br(\\s)*(\\/)*>)/gi, ' ')\n    .replace(/&nbsp;/gi, ' ')\n    .replace(/(\\s)+/gi, ' ')\n    .trim()\n)\n\nconst esc = content => content.replace(/\"/gi, '\\\\\"')\n\nconst addCondition = (data, variables, content=null) => {\n  const ifContent = content ? `[[${content}|${convertId(data.condition.next)}]]` : `<<include \"${convertId(data.condition.next)}\">>`\n  const elseContent = content ? `[[${content}|${convertId(data.next)}]]` : `<<include \"${convertId(data.next)}\">>`\n  return (\n`<<if ${variables[data.condition.params].tweeVar}>>\n  ${ifContent}\n<<else>>\n  ${elseContent}\n<</if>>\n`)}\n\nconst addLink = (data, variables) => {\n  const condition = (data.condition && data.condition.next && data.condition.params) ? data.condition.params : null\n  const actionId = (data.action && data.action.params && typeof data.action.params === 'string') ? data.action.params : null\n  const next = data.next ? convertId(data.next) : null\n  const content = esc(cleanContent(data.content))\n  if (actionId) {\n    const {tweeVar, desc} = variables[actionId]\n    return `[[${content}|Toggle-Object][${tweeVar} to not ${tweeVar}; $actionText to \"${esc(desc)}\"; $actionPassage to \"${next}\"; $isObjectWin to ${tweeVar}]]\\n`\n  } else if (condition) {\n    return `${addCondition(data, variables, content)}\\n`\n  } else if (next) {\n    return `[[${content}|${next}]]\\n`\n  }\n  return ''\n}\n\nconst addNext = (data, variables) => {\n  const condition = (data.condition && data.condition.next && data.condition.params) ? data.condition.params : null\n  const actionId = (data.action && data.action.params && typeof data.action.params === 'string') ? data.action.params : null\n  const next = data.next ? convertId(data.next) : null\n  if (actionId) {\n    const {tweeVar, desc} = variables[actionId]\n    return `<<set ${tweeVar} to not ${tweeVar}; $actionText to \"${esc(desc)}\"; $actionPassage to \"${next}\"; $isObjectWin to ${tweeVar}>>\\n<<include \"Toggle-Object\">>\\n`\n  } else if (condition) {\n    return `${addCondition(data, variables)}\\n`\n  } else if (next) {\n    return `<<include \"${next}\">>\\n`\n  }\n  return ''\n}\n\nexport const convertToSugarcube = (story) => {\n  const { _id, meta, firstSequence, sequences, assets } = story\n\n  let variables = {}\n  for (let asset of assets) {\n    variables[asset.id] = {\n      tweeVar: '$' + convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n  \n  let result = `<!--\n${getHeader(_id)}\n-->\n\n:: StoryAuthor\n${getAuthor(meta)}\n\n:: StoryTitle\n${meta.name}\n\n:: StorySubtitle\n${meta.description}\n\n:: StoryData\n{\n  \"ifid\": \"${uuidv4()}\",\n  \"format\": \"SugarCube\",\n  \"format-version\": \"2.31.1\",\n  \"start\": \"${convertId(firstSequence)}\",\n  \"zoom\": 1\n}\n\n`\n  const varsAsArray = Object.entries(variables).map(([_, data]) => data)\n  let variablesSetup = '<<set $actionText to false; $actionPassage to false; $isObjectWin to false>>\\n'\n  for (let variable of varsAsArray) {\n    variablesSetup += '<<set ' + variable.tweeVar + ' to false>>\\n'\n  }\n\n  for (let sequence of sequences) {\n    const text = cleanContent(sequence.content)\n    result += '\\n:: ' + convertId(sequence.id) + '\\n' + text + '\\n'\n    if (sequence.choices && sequence.choices.length > 0) {\n      for (let choice of sequence.choices) {\n        result += addLink(choice, variables)\n      }\n    } else {\n      result += addNext(sequence, variables)\n    }\n    if (sequence.id === firstSequence) {\n      result += variablesSetup\n    }\n  }\n\n  result += `\n:: Toggle-Object\n<<if $isObjectWin>>\n  récupéré : $actionText\n<<else>>\n  perdu : $actionText\n<</if>>\n<<include [[$actionPassage]]>>\n`\n  return result\n}","import { convertToHarlowe } from './twee-harlowe'\nimport { convertToSugarcube } from './twee-sugarcube'\n\nexport const convertToTwee = (story, format) => {\n  if (format === 'harlowe') {\n    return convertToHarlowe(story)\n  }\n  if (format === 'sugarcube') {\n    return convertToSugarcube(story)\n  }\n  throw new Error('This format is unvailable!')\n}","import kebabCase from 'lodash.kebabcase'\nimport { getAuthor } from '../utils'\n\nconst convertId = id => id.replace(/-/gi, '_')\nconst cleanContent = content => (\n  content\n    .replace(/<\\/p>/gi, '</p> ')\n    .replace(/(<([/p]+)>)/gi, '')\n    .replace(/(<(strong|b|h\\d)>\\s)/gi, ' <b>')\n    .replace(/(\\s<\\/(strong|b|h\\d)>)/gi, '</b> ')\n    .replace(/(<([/]*)(strong|b|h\\d)>)/gi, \"**\")\n    .replace(/(<em>\\s)/gi, ' <em>')\n    .replace(/(\\s<\\/em>)/gi, '</em> ')\n    .replace(/(<([/]*)(em)>)/gi, '_')\n    .replace(/(<([/]*)(span)>)/gi, '')\n    .replace(/<span class=\"ql-cursor\">/gi, '')\n    .replace(/(<br(\\s)*(\\/)*>)/gi, '+n+')\n    .replace(/(&nbsp;)+/gi, ' ')\n    .replace(/(\\s)+/gi, ' ')\n    .trim()\n)\n\nexport const convertToJdrBot = (story) => {\n  const { meta, firstSequence, sequences, assets, sounds } = story\n\n  const getSequenceByIndex = (id) => (sequences.findIndex(s => s.id === id) + 2)\n\n  let variables = {}\n  for (let asset of assets) {\n    variables[asset.id] = {\n      storyVar: convertId(kebabCase(asset.label)),\n      ...asset\n    }\n  }\n\n  const rooms = []\n  const specialRooms = []\n  let nextSpecialRoomId = sequences.length + 2\n\n  const addObjectRoom = (object, nextId) => {\n    const objectRoomId = nextSpecialRoomId\n    // condition to check if object should be win / lose\n    specialRooms.push({\n      id: objectRoomId,\n      events: [\n        `997|${object.storyVar}|${objectRoomId + 2}|null\\n`, // object should be lose\n        `997|null|${objectRoomId + 1}|null\\n` // object should be win\n      ]\n    })\n    // win object\n    specialRooms.push({\n      id: objectRoomId + 1,\n      action: `${object.storyVar}|invisible|null|récupéré: ${object.desc.trim()}|null`,\n      events: [`997|null|${nextId}|null\\n`]\n    })\n    // lose object\n    specialRooms.push({\n      id: objectRoomId + 2,\n      action: `-${object.storyVar}|invisible|null|perdu: ${object.desc.trim()}|null`,\n      events: [`997|null|${nextId}|null\\n`]\n    })\n    nextSpecialRoomId += 3\n    return objectRoomId\n  }\n\n  /* Manage story header */\n  let headRoom = '1 _start_\\n'\n  if (meta.image) {\n    headRoom += `[[${meta.image}]]+n+&&\\nCrédit photo : Unsplash+n+&&\\n`\n  }\n  headRoom += `Une histoire de ${getAuthor(meta).trim()}+n+&&\\n`\n  headRoom += `(exporté via https://moiki.fr)+n++n+&&\\n`\n  headRoom += `${meta.description}\\n|\\n`\n  headRoom += `997|null|${getSequenceByIndex(firstSequence)}|null\\n`\n  headRoom += `*****`\n  rooms.push({id: '$start', room: headRoom})\n\n  /* Convert sequences */\n  for (let sequence of sequences) {\n    let thisRoom = ''\n    const text = cleanContent(sequence.content)\n    thisRoom += getSequenceByIndex(sequence.id) + ' ' + sequence.id + '\\n'\n    /*\n    // sound are not really well managed on discord, and they could be annoying... so skipping this part.\n    if (sequence.soundLoop && sequence.soundLoop.sound) {\n      const snd = sounds.find(s => s.id === sequence.soundLoop.sound)\n      if (snd && snd.sound && snd.sound.previews && snd.sound.previews['preview-lq-mp3'])\n      thisRoom += '<<' + snd.sound.previews['preview-lq-mp3'] + '>>'\n    }\n    */\n    thisRoom += '[[' + text.split('\\n').map(x => `${x}+n+`).join('') + ']]'\n\n    if (sequence.choices && sequence.choices.length > 0) {\n      /*\n        This is a choice sequence\n      */\n      const nextRooms = []\n      let index = 1\n      for (let choice of sequence.choices) {\n        const nextId = getSequenceByIndex(choice.next)\n        if (choice.condition && choice.condition.next && choice.condition.params) {\n          specialRooms.push({\n            id: nextSpecialRoomId,\n            events: [\n              `997|${variables[choice.condition.params].storyVar}|${getSequenceByIndex(choice.condition.next)}|null\\n`,\n              `997|null|${nextId}|null\\n`\n            ]\n          })\n          thisRoom += `+n+&&\\n${cleanContent(choice.content)} (${index})`\n          nextRooms.push(nextSpecialRoomId)\n          ++nextSpecialRoomId\n        } else if (choice.action && choice.action.params && typeof choice.action.params === 'string') {\n          const actionRoomId = addObjectRoom(variables[choice.action.params], nextId)\n          thisRoom += `+n+&&\\n${cleanContent(choice.content)} (${index})`\n          nextRooms.push(actionRoomId)\n        } else {\n          thisRoom += `+n+&&\\n${cleanContent(choice.content)} (${index})`\n          nextRooms.push(nextId)\n        }\n        ++index\n      }\n      if (nextRooms.length > 0) {\n        thisRoom += '\\n|\\n'\n        index = 1\n        for (let next of nextRooms) {\n          thisRoom += index + '->' + next + '\\n'\n          ++index\n        }\n      }\n    } else if (sequence.final || !sequence.next) {\n      /*\n        This is a final sequence\n      */\n      thisRoom += '\\n|\\n'\n      if (sequence.final && sequence.isHappyEnd) {\n        thisRoom += '999|Tu as gagné ! Bravo !\\n'\n      } else {\n        thisRoom += '998|Tu as perdu ! Recommence, je suis sûr que tu peux y arriver !\\n'\n      }  \n    } else {\n      /*\n        This is a simple sequence\n      */\n      const nextId = getSequenceByIndex(sequence.next)\n      thisRoom += '\\n|\\n'\n      if (sequence.action && sequence.action.params && typeof sequence.action.params === 'string') {\n        const actionRoomId = addObjectRoom(variables[sequence.action.params], nextId)\n        thisRoom += `997|null|${actionRoomId}|null\\n`\n      } else {\n        if (sequence.condition) {\n          thisRoom += `997|${variables[sequence.condition.params].storyVar}|${getSequenceByIndex(sequence.condition.next)}|null\\n`\n        }\n        thisRoom += `997|null|${nextId}|null\\n`\n      }\n    }\n    thisRoom += '*****'\n    rooms.push({id: sequence.id, room: thisRoom})\n  }\n\n  /*\n    Special rooms used for conditions / objects\n  */\n  for (let {id, events, action} of specialRooms) {\n    let room = id + ' condition-room-' + id + '\\n'\n    room += 'null\\n'\n    room += action ? action : '|'\n    room += '\\n' + events.join('')\n    room += '*****'\n    rooms.push({id, room})\n  }\n\n  return meta.name + '\\n' + rooms.length + '\\n' + rooms.map(({room}) => room).join('\\n') + '\\n1§1️⃣|2§2️⃣|3§3️⃣'\n}"],"names":["object","callback","reAsciiWord","reLatin","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsLowerMisc","rsUpperMisc","reOptMod","rsModifier","rsSeq","join","rsEmoji","reApos","RegExp","reComboMark","reUnicodeWord","reHasUnicodeWord","freeSelf","self","Object","root","global","Function","deburrLetter","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","key","undefined","objectToString","prototype","toString","Symbol","symbolProto","symbolToString","value","isObjectLike","call","isSymbol","result","baseToString","word","index","toLowerCase","string","array","iteratee","accumulator","initAccum","length","arrayReduce","pattern","guard","test","hasUnicodeWord","match","unicodeWords","asciiWords","words","replace","deburr","getHeader","storyId","Date","toLocaleDateString","weekday","year","month","day","hour","minute","second","getAuthor","story","author","pseudo","firstname","lastname","vars","cleanTextFn","firstSequence","tree","addLink","id","to","isBackLink","in","push","allSequencesById","sequences","s","choices","choice","content","condition","next","params","chapters","entries","map","data","node","chap","currentId","chain","chainWithObjects","action","objectAction","chainSum","contentSum","chainObj","trim","chainedContent","forEach","seq","convertId","cleanContent","addCondition","variables","inkVar","addAction","prefix","desc","convertToInk","_id","meta","assets","asset","kebabCase","label","name","image","description","sequence","text","choiceContent","directions","getChoiceGotoFunctionFromIndex","Error","getChoiceLinkValue","identifier","getNodeDescription","choicesDescription","choicesLinks","choiceIndex","gotoFunction","gotoValue","l","isHappyEnd","convertToInform","varsAsArray","split","v","d","idx","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","byteToHex","i","substr","v4","options","buf","offset","Array","rnds","random","ii","bytesToUuid","esc","kind","tweeVar","actionId","addNext","ifContent","elseContent","convertToTwee","format","uuidv4","variablesSetup","convertToHarlowe","convertToSugarcube","convertToJdrBot","getSequenceByIndex","findIndex","storyVar","rooms","specialRooms","nextSpecialRoomId","addObjectRoom","nextId","objectRoomId","events","headRoom","room","thisRoom","x","nextRooms","actionRoomId"],"mappings":"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"}